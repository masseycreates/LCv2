{"version":3,"file":"index-DZF3lf8c.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/Header.jsx","../../src/components/QuickSelection.jsx","../../src/components/NumberSelector.jsx","../../src/components/TaxCalculator.jsx","../../src/services/PowerballAPI.js","../../src/components/DataAnalysis.jsx","../../src/components/LotterySystem.jsx","../../src/index.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// LCv2 Header Component - Enhanced & Modular\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { formatJackpot, formatCurrency, calculateNextDrawing } from '../utils/helpers.js';\n\nexport default function Header({ \n  liveDataAvailable, \n  currentJackpot, \n  nextDrawDate, \n  isUpdating, \n  onRefresh,\n  systemPerformance \n}) {\n  \n  // ===========================================================================\n  // LOCAL STATE\n  // ===========================================================================\n  \n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [showSystemInfo, setShowSystemInfo] = useState(false);\n\n  // ===========================================================================\n  // EFFECTS\n  // ===========================================================================\n  \n  // Update current time every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    \n    return () => clearInterval(timer);\n  }, []);\n\n  // ===========================================================================\n  // COMPUTED VALUES\n  // ===========================================================================\n  \n  const jackpotDisplay = useMemo(() => {\n    if (!currentJackpot) {\n      return {\n        amount: 'Loading...',\n        cashValue: 'Loading...',\n        isLoading: true\n      };\n    }\n    \n    return {\n      amount: formatJackpot(currentJackpot.amount),\n      cashValue: formatCurrency(currentJackpot.cashValue || currentJackpot.amount * 0.6),\n      isLoading: false,\n      isLive: liveDataAvailable && !currentJackpot.source\n    };\n  }, [currentJackpot, liveDataAvailable]);\n\n  const drawingInfo = useMemo(() => {\n    if (nextDrawDate) {\n      return {\n        date: nextDrawDate.date || nextDrawDate,\n        time: nextDrawDate.time || '10:59 PM ET',\n        dayOfWeek: nextDrawDate.dayOfWeek || 'Mon/Wed/Sat'\n      };\n    }\n    \n    const calculated = calculateNextDrawing();\n    return {\n      date: calculated.date,\n      time: calculated.time,\n      dayOfWeek: calculated.dayOfWeek\n    };\n  }, [nextDrawDate]);\n\n  const systemStatusDisplay = useMemo(() => {\n    if (!systemPerformance) return null;\n    \n    const { uptime, memoryUsage, errorCount } = systemPerformance;\n    \n    return {\n      uptime: uptime ? `${Math.round(uptime / 1000 / 60)}m` : '0m',\n      memory: memoryUsage ? `${memoryUsage.used}MB` : 'N/A',\n      errors: errorCount || 0,\n      status: errorCount > 5 ? 'warning' : 'healthy'\n    };\n  }, [systemPerformance]);\n\n  // ===========================================================================\n  // EVENT HANDLERS\n  // ===========================================================================\n  \n  const handleRefresh = () => {\n    if (isUpdating || !onRefresh) return;\n    onRefresh();\n  };\n\n  const toggleSystemInfo = () => {\n    setShowSystemInfo(!showSystemInfo);\n  };\n\n  // ===========================================================================\n  // RENDER HELPERS\n  // ===========================================================================\n  \n  const renderJackpotSection = () => (\n    <div className=\"text-center md:text-left\">\n      <div className=\"mb-2\">\n        <h1 className=\"text-2xl md:text-3xl font-bold text-white mb-1\">\n          Current Powerball Jackpot\n        </h1>\n        <div className=\"flex items-center justify-center md:justify-start gap-2 text-sm\">\n          <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n            jackpotDisplay.isLive \n              ? 'bg-green-500/20 text-green-100' \n              : 'bg-yellow-500/20 text-yellow-100'\n          }`}>\n            {jackpotDisplay.isLive ? '?? Live Data' : '?? Offline'}\n          </span>\n          <span className=\"text-white/80\">\n            Updated: {currentTime.toLocaleTimeString()}\n          </span>\n        </div>\n      </div>\n      \n      <div className=\"space-y-1\">\n        <div className={`text-4xl md:text-5xl font-black text-white transition-all duration-300 ${\n          jackpotDisplay.isLoading ? 'animate-pulse' : ''\n        }`}>\n          {jackpotDisplay.amount}\n        </div>\n        \n        <div className=\"text-lg text-white/90\">\n          Cash Value: <span className=\"font-semibold\">{jackpotDisplay.cashValue}</span>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderDrawingInfo = () => (\n    <div className=\"text-center md:text-right\">\n      <div className=\"space-y-2\">\n        <div>\n          <div className=\"text-lg font-semibold text-white mb-1\">\n            Next Drawing\n          </div>\n          <div className=\"space-y-1\">\n            <div className=\"text-2xl font-bold text-white\">\n              {drawingInfo.date}\n            </div>\n            <div className=\"text-sm text-white/90\">\n              {drawingInfo.time}\n            </div>\n            <div className=\"text-xs text-white/80\">\n              Drawings: {drawingInfo.dayOfWeek}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex justify-center md:justify-end\">\n          <button\n            onClick={handleRefresh}\n            disabled={isUpdating}\n            className={`btn btn-sm px-3 py-2 bg-white/20 hover:bg-white/30 text-white border border-white/30 transition-all duration-200 ${\n              isUpdating ? 'opacity-50 cursor-not-allowed' : 'hover:scale-105'\n            }`}\n            aria-label={isUpdating ? 'Refreshing data...' : 'Refresh lottery data'}\n          >\n            <span className={`text-sm ${isUpdating ? 'animate-spin' : ''}`}>\n              {isUpdating ? '??' : '??'}\n            </span>\n            <span className=\"hidden sm:inline ml-1\">\n              {isUpdating ? 'Updating...' : 'Refresh'}\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSystemStatus = () => (\n    <div className=\"mt-4 pt-4 border-t border-white/20\">\n      <button\n        onClick={toggleSystemInfo}\n        className=\"flex items-center justify-between w-full text-left text-white/90 hover:text-white transition-colors\"\n      >\n        <span className=\"text-sm font-medium\">System Status</span>\n        <span className={`text-xs transition-transform duration-200 ${\n          showSystemInfo ? 'rotate-180' : ''\n        }`}>\n          ?\n        </span>\n      </button>\n      \n      {showSystemInfo && systemStatusDisplay && (\n        <div className=\"mt-3 grid grid-cols-3 gap-4 text-center\">\n          <div className=\"space-y-1\">\n            <div className=\"text-xs text-white/70\">Uptime</div>\n            <div className=\"text-sm font-semibold text-white\">\n              {systemStatusDisplay.uptime}\n            </div>\n          </div>\n          <div className=\"space-y-1\">\n            <div className=\"text-xs text-white/70\">Memory</div>\n            <div className=\"text-sm font-semibold text-white\">\n              {systemStatusDisplay.memory}\n            </div>\n          </div>\n          <div className=\"space-y-1\">\n            <div className=\"text-xs text-white/70\">Errors</div>\n            <div className={`text-sm font-semibold ${\n              systemStatusDisplay.errors === 0 ? 'text-green-300' : 'text-yellow-300'\n            }`}>\n              {systemStatusDisplay.errors}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // ===========================================================================\n  // MAIN RENDER\n  // ===========================================================================\n  \n  return (\n    <header className=\"mb-8\">\n      <div className={`card overflow-hidden ${\n        liveDataAvailable ? 'gradient-bg' : 'gradient-bg-unavailable'\n      }`}>\n        <div className=\"relative z-10\">\n          \n          {/* Main Header Content */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 items-center\">\n            {renderJackpotSection()}\n            {renderDrawingInfo()}\n          </div>\n\n          {/* System Information (Collapsible) */}\n          {systemPerformance && renderSystemStatus()}\n\n          {/* Architecture Badge */}\n          <div className=\"absolute top-4 right-4 hidden lg:block\">\n            <div className=\"flex flex-col items-end space-y-1\">\n              <div className=\"hybrid-badge\">\n                ??? Modular Architecture\n              </div>\n              <div className=\"claude-badge\">\n                ?? Claude Sonnet 4 Ready\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Mobile Architecture Info */}\n      <div className=\"lg:hidden mt-4 flex justify-center space-x-2\">\n        <div className=\"hybrid-badge text-xs\">\n          ??? Modular\n        </div>\n        <div className=\"claude-badge text-xs\">\n          ?? Sonnet 4\n        </div>\n      </div>\n    </header>\n  );\n}","// LCv2 Quick Selection Component - Claude Sonnet 4 + 6 Algorithms Hybrid\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { lotteryPredictor } from '../services/LotteryPredictor.js';\nimport { claudeAPI } from '../services/ClaudeAPI.js';\nimport { UI_CONFIG, SUCCESS_MESSAGES, ERROR_MESSAGES } from '../utils/constants.js';\nimport { getConfidenceClass, getConfidenceColor, formatNumbers, generateQuickPick } from '../utils/helpers.js';\n\nexport default function QuickSelection({\n  historicalStats,\n  currentJackpot,\n  historicalDataAvailable,\n  isLoadingHistory,\n  historicalRecordsLimit,\n  onDataLimitChange,\n  dataStatus,\n  setDataStatus,\n  liveDataAvailable\n}) {\n  \n  // ===========================================================================\n  // STATE MANAGEMENT\n  // ===========================================================================\n  \n  // AI Integration State\n  const [aiApiKey, setAiApiKey] = useState('');\n  const [aiEnabled, setAiEnabled] = useState(false);\n  const [isLoadingAI, setIsLoadingAI] = useState(false);\n  const [aiConnectionStatus, setAiConnectionStatus] = useState('disconnected');\n  \n  // Selection State\n  const [quickSelectionSets, setQuickSelectionSets] = useState([]);\n  const [isGeneratingSelections, setIsGeneratingSelections] = useState(false);\n  const [selectedSetIds, setSelectedSetIds] = useState([]);\n  const [lastGenerationTime, setLastGenerationTime] = useState(null);\n  \n  // Configuration State\n  const [selectionMode, setSelectionMode] = useState('hybrid'); // 'hybrid', 'ai-only', 'algorithms-only'\n  const [numberOfSets, setNumberOfSets] = useState(5);\n  const [autoRefresh, setAutoRefresh] = useState(false);\n\n  // ===========================================================================\n  // EFFECTS\n  // ===========================================================================\n  \n  // Initialize selections when historical data loads\n  useEffect(() => {\n    if (historicalDataAvailable && historicalStats && !isLoadingHistory && quickSelectionSets.length === 0) {\n      generateInitialSelections();\n    }\n  }, [historicalDataAvailable, historicalStats, isLoadingHistory]);\n\n  // Auto-refresh selections if enabled\n  useEffect(() => {\n    if (!autoRefresh) return;\n    \n    const refreshInterval = setInterval(() => {\n      if (aiEnabled) {\n        generateClaudeHybridSelections();\n      } else {\n        generateAlgorithmSelections();\n      }\n    }, 5 * 60 * 1000); // Every 5 minutes\n    \n    return () => clearInterval(refreshInterval);\n  }, [autoRefresh, aiEnabled]);\n\n  // ===========================================================================\n  // CONFIGURATION OPTIONS\n  // ===========================================================================\n  \n  const historicalDataOptions = useMemo(() => [\n    { value: 100, label: '100 drawings (3 months)', recommended: false },\n    { value: 250, label: '250 drawings (8 months)', recommended: true },\n    { value: 500, label: '500 drawings (16 months)', recommended: false },\n    { value: 750, label: '750 drawings (2 years)', recommended: false },\n    { value: 1000, label: '1000 drawings (3 years)', recommended: false }\n  ], []);\n\n  const selectionModeOptions = useMemo(() => [\n    { \n      value: 'hybrid', \n      label: 'AI + Algorithms Hybrid', \n      icon: '???',\n      description: 'Claude Sonnet 4 enhanced with 6 mathematical algorithms',\n      requiresAI: true\n    },\n    { \n      value: 'ai-only', \n      label: 'Claude AI Only', \n      icon: '??',\n      description: 'Pure Claude Sonnet 4 analysis and predictions',\n      requiresAI: true\n    },\n    { \n      value: 'algorithms-only', \n      label: 'Algorithms Only', \n      icon: '??',\n      description: '6 mathematical algorithms without AI enhancement',\n      requiresAI: false\n    }\n  ], []);\n\n  // ===========================================================================\n  // AI INTEGRATION FUNCTIONS\n  // ===========================================================================\n  \n  const enableClaudeAI = useCallback(async () => {\n    const trimmedKey = aiApiKey.trim();\n    \n    if (!trimmedKey) {\n      alert('Please enter your Anthropic API key');\n      return;\n    }\n    \n    if (!claudeAPI.validateApiKey(trimmedKey)) {\n      alert('Please enter a valid Anthropic API key (starts with sk-ant-)');\n      return;\n    }\n    \n    try {\n      setIsLoadingAI(true);\n      setDataStatus('?? Testing Claude Sonnet 4 connection...');\n      setAiConnectionStatus('connecting');\n      \n      claudeAPI.initialize(trimmedKey);\n      \n      const connectionTest = await claudeAPI.testConnection();\n      \n      if (connectionTest.success) {\n        setAiEnabled(true);\n        setAiConnectionStatus('connected');\n        setDataStatus('? Claude Sonnet 4 connected successfully');\n        \n        // Generate initial AI-enhanced selections\n        await generateClaudeHybridSelections();\n        \n      } else {\n        throw new Error(connectionTest.error || 'Connection test failed');\n      }\n      \n    } catch (error) {\n      console.error('Claude AI initialization failed:', error);\n      setAiEnabled(false);\n      setAiConnectionStatus('error');\n      alert(`Failed to connect to Claude Sonnet 4: ${error.message}`);\n      setDataStatus('? Claude Sonnet 4 connection failed');\n    } finally {\n      setIsLoadingAI(false);\n    }\n  }, [aiApiKey, setDataStatus]);\n\n  const disconnectClaudeAI = useCallback(() => {\n    setAiEnabled(false);\n    setAiConnectionStatus('disconnected');\n    setAiApiKey('');\n    setSelectionMode('algorithms-only');\n    setDataStatus('?? Claude Sonnet 4 disconnected');\n    \n    // Regenerate with algorithms only\n    generateAlgorithmSelections();\n  }, [setDataStatus]);\n\n  // ===========================================================================\n  // SELECTION GENERATION FUNCTIONS\n  // ===========================================================================\n  \n  const generateInitialSelections = useCallback(async () => {\n    try {\n      setIsGeneratingSelections(true);\n      \n      if (aiEnabled && selectionMode !== 'algorithms-only') {\n        await generateClaudeHybridSelections();\n      } else {\n        await generateAlgorithmSelections();\n      }\n      \n    } catch (error) {\n      console.error('Failed to generate initial selections:', error);\n      setDataStatus(`? Selection generation failed: ${error.message}`);\n      generateFallbackSelections();\n    } finally {\n      setIsGeneratingSelections(false);\n    }\n  }, [aiEnabled, selectionMode]);\n\n  const generateAlgorithmSelections = useCallback(async () => {\n    try {\n      setIsGeneratingSelections(true);\n      setDataStatus('?? Generating algorithm-based selections...');\n      \n      const convertedData = convertHistoricalDataForPredictor(historicalStats);\n      const predictions = lotteryPredictor.generateEnsemblePrediction(convertedData, numberOfSets);\n      const enhancedPredictions = enhanceAlgorithmPredictions(predictions);\n      \n      setQuickSelectionSets(enhancedPredictions);\n      setLastGenerationTime(new Date());\n      setDataStatus('? Algorithm selections generated');\n      \n    } catch (error) {\n      console.error('Algorithm selection generation failed:', error);\n      setDataStatus(`? Algorithm generation failed: ${error.message}`);\n      generateFallbackSelections();\n    } finally {\n      setIsGeneratingSelections(false);\n    }\n  }, [historicalStats, numberOfSets, setDataStatus]);\n\n  const generateClaudeHybridSelections = useCallback(async () => {\n    if (!aiEnabled || !aiApiKey) {\n      alert('Please enable Claude Sonnet 4 first by entering your API key.');\n      return;\n    }\n    \n    try {\n      setIsGeneratingSelections(true);\n      setDataStatus('??? Generating Claude Sonnet 4 hybrid selections...');\n      \n      // First generate algorithm predictions\n      const convertedData = convertHistoricalDataForPredictor(historicalStats);\n      const algorithmPredictions = lotteryPredictor.generateEnsemblePrediction(convertedData, numberOfSets);\n      \n      // Enhance with Claude AI\n      const claudeResponse = await claudeAPI.generateHybridSelection({\n        historicalData: sanitizeHistoricalDataForAPI(historicalStats),\n        currentJackpot: currentJackpot,\n        requestedSets: numberOfSets,\n        strategy: selectionMode,\n        localAlgorithmResults: algorithmPredictions.slice(0, 3) // Send top 3 algorithm results\n      });\n      \n      if (claudeResponse.success) {\n        const hybridSelections = processClaudeHybridResponse(claudeResponse.data, algorithmPredictions);\n        setQuickSelectionSets(hybridSelections);\n        setLastGenerationTime(new Date());\n        setDataStatus('? Claude Sonnet 4 hybrid selections generated');\n      } else {\n        throw new Error(claudeResponse.error || 'Claude AI generation failed');\n      }\n      \n    } catch (error) {\n      console.error('Claude hybrid selection generation failed:', error);\n      setDataStatus(`? Claude generation failed: ${error.message}`);\n      \n      // Fallback to algorithm-only selections\n      await generateAlgorithmSelections();\n    } finally {\n      setIsGeneratingSelections(false);\n    }\n  }, [aiEnabled, aiApiKey, historicalStats, currentJackpot, numberOfSets, selectionMode, setDataStatus]);\n\n  const generateFallbackSelections = useCallback(() => {\n    const fallbackSets = Array.from({ length: numberOfSets }, (_, i) => {\n      const quickPick = generateQuickPick();\n      return {\n        id: i + 1,\n        name: `?? Quick Pick ${i + 1}`,\n        description: 'Random selection with mathematical constraints',\n        algorithmDetail: 'Enhanced random generation',\n        numbers: quickPick.numbers,\n        powerball: quickPick.powerball,\n        strategy: '70% Base Confidence',\n        confidence: 70,\n        actualStrategy: 'Fallback Random',\n        technicalAnalysis: 'Mathematical fallback protocol',\n        claudeGenerated: false,\n        isHybrid: false,\n        source: 'fallback'\n      };\n    });\n    \n    setQuickSelectionSets(fallbackSets);\n    setLastGenerationTime(new Date());\n  }, [numberOfSets]);\n\n  // ===========================================================================\n  // HELPER FUNCTIONS\n  // ===========================================================================\n  \n  const convertHistoricalDataForPredictor = (stats) => {\n    if (!stats || !stats.drawings) return [];\n    \n    return stats.drawings\n      .filter(drawing => drawing.numbers && drawing.powerball)\n      .map(drawing => ({\n        numbers: [...drawing.numbers],\n        powerball: drawing.powerball,\n        date: drawing.date || new Date().toISOString()\n      }))\n      .slice(0, historicalRecordsLimit);\n  };\n\n  const enhanceAlgorithmPredictions = (predictions) => {\n    const algorithmNames = [\n      'EWMA Frequency Consensus',\n      'Neural Network Pattern Recognition',\n      'Pair Relationship Analysis',\n      'Gap Analysis Optimization',\n      'Markov Chain Transition',\n      'Sum Range Optimization'\n    ];\n    \n    return predictions.map((prediction, index) => ({\n      id: index + 1,\n      name: `?? ${algorithmNames[index] || `Algorithm ${index + 1}`}`,\n      description: `Mathematical analysis using ${algorithmNames[index]?.toLowerCase() || 'advanced algorithms'}`,\n      algorithmDetail: prediction.strategy || 'Mathematical pattern analysis',\n      numbers: prediction.numbers,\n      powerball: prediction.powerball,\n      strategy: `${prediction.confidence}% Algorithm Confidence`,\n      confidence: prediction.confidence,\n      actualStrategy: algorithmNames[index] || prediction.strategy,\n      technicalAnalysis: prediction.analysis || 'Statistical pattern recognition',\n      claudeGenerated: false,\n      isHybrid: false,\n      source: 'algorithm'\n    }));\n  };\n\n  const sanitizeHistoricalDataForAPI = (stats) => {\n    if (!stats || !stats.drawings) return { drawings: [], totalDrawings: 0 };\n    \n    const maxDrawings = 50; // Limit for API transmission\n    const sanitizedDrawings = stats.drawings\n      .slice(0, maxDrawings)\n      .filter(drawing => drawing.numbers && drawing.powerball)\n      .map(drawing => ({\n        numbers: drawing.numbers,\n        powerball: drawing.powerball,\n        date: drawing.date || 'Unknown'\n      }));\n    \n    return {\n      drawings: sanitizedDrawings,\n      totalDrawings: stats.totalDrawings || sanitizedDrawings.length,\n      hotNumbers: (stats.hotNumbers || []).slice(0, 10),\n      coldNumbers: (stats.coldNumbers || []).slice(0, 10)\n    };\n  };\n\n  const processClaudeHybridResponse = (claudeData, algorithmPredictions) => {\n    try {\n      // Process Claude's enhanced selections\n      const claudeSelections = claudeData.selections || [];\n      const hybridSelections = [];\n      \n      // Add Claude-enhanced selections\n      claudeSelections.forEach((selection, index) => {\n        hybridSelections.push({\n          id: index + 1,\n          name: `??? ${selection.name || `Claude Hybrid ${index + 1}`}`,\n          description: selection.description || 'Claude Sonnet 4 enhanced prediction',\n          algorithmDetail: selection.algorithmDetail || 'AI-enhanced mathematical analysis',\n          numbers: selection.numbers,\n          powerball: selection.powerball,\n          strategy: `${selection.confidence}% Claude Confidence`,\n          confidence: selection.confidence,\n          actualStrategy: selection.actualStrategy || 'Claude AI Enhanced',\n          technicalAnalysis: selection.technicalAnalysis || claudeData.analysis,\n          claudeGenerated: true,\n          isHybrid: true,\n          claudeInsights: selection.insights,\n          source: 'claude-hybrid'\n        });\n      });\n      \n      // Add remaining algorithm selections if needed\n      const remainingSlots = numberOfSets - hybridSelections.length;\n      if (remainingSlots > 0) {\n        const enhancedAlgorithms = enhanceAlgorithmPredictions(algorithmPredictions.slice(0, remainingSlots));\n        hybridSelections.push(...enhancedAlgorithms.map(sel => ({ ...sel, id: hybridSelections.length + sel.id })));\n      }\n      \n      return hybridSelections.slice(0, numberOfSets);\n      \n    } catch (error) {\n      console.error('Failed to process Claude response:', error);\n      return enhanceAlgorithmPredictions(algorithmPredictions);\n    }\n  };\n\n  // ===========================================================================\n  // SELECTION MANAGEMENT\n  // ===========================================================================\n  \n  const toggleSelection = useCallback((setId) => {\n    setSelectedSetIds(prev => \n      prev.includes(setId) \n        ? prev.filter(id => id !== setId)\n        : [...prev, setId]\n    );\n  }, []);\n\n  const copySelection = useCallback((selection) => {\n    const formattedNumbers = formatNumbers(selection.numbers, selection.powerball);\n    navigator.clipboard.writeText(formattedNumbers);\n    setDataStatus(`?? Copied: ${formattedNumbers}`);\n    setTimeout(() => setDataStatus(''), 3000);\n  }, [setDataStatus]);\n\n  const copyAllSelections = useCallback(() => {\n    const allFormatted = quickSelectionSets\n      .map((selection, index) => `Set ${index + 1}: ${formatNumbers(selection.numbers, selection.powerball)}`)\n      .join('\\n');\n    \n    navigator.clipboard.writeText(allFormatted);\n    setDataStatus(`?? Copied all ${quickSelectionSets.length} selections`);\n    setTimeout(() => setDataStatus(''), 3000);\n  }, [quickSelectionSets, setDataStatus]);\n\n  // ===========================================================================\n  // RENDER HELPERS\n  // ===========================================================================\n  \n  const renderAISetupSection = () => (\n    <div className=\"card mb-6\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">?? Claude Sonnet 4 AI Integration</h3>\n        <p className=\"card-subtitle\">Enable AI-enhanced predictions with Claude Sonnet 4</p>\n      </div>\n      \n      {!aiEnabled ? (\n        <div className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"ai-api-key\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Anthropic API Key\n            </label>\n            <div className=\"flex gap-3\">\n              <input\n                id=\"ai-api-key\"\n                type=\"password\"\n                value={aiApiKey}\n                onChange={(e) => setAiApiKey(e.target.value)}\n                placeholder=\"sk-ant-...\"\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <button\n                onClick={enableClaudeAI}\n                disabled={isLoadingAI || !aiApiKey.trim()}\n                className=\"btn btn-claude px-4\"\n              >\n                {isLoadingAI ? (\n                  <>\n                    <div className=\"loading-spinner\" />\n                    <span>Connecting...</span>\n                  </>\n                ) : (\n                  <>\n                    <span>??</span>\n                    <span>Enable AI</span>\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n            <div className=\"flex items-start gap-3\">\n              <span className=\"text-blue-500 text-lg\">??</span>\n              <div className=\"text-sm text-blue-800\">\n                <p className=\"font-medium mb-1\">Get your Anthropic API key:</p>\n                <ol className=\"list-decimal list-inside space-y-1 text-sm\">\n                  <li>Visit <a href=\"https://console.anthropic.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline\">console.anthropic.com</a></li>\n                  <li>Create an account or sign in</li>\n                  <li>Navigate to API Keys and create a new key</li>\n                  <li>Copy the key and paste it above</li>\n                </ol>\n                <p className=\"mt-2 text-xs\">Your API key is stored locally and never sent to our servers.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between p-4 bg-green-50 border border-green-200 rounded-lg\">\n            <div className=\"flex items-center gap-3\">\n              <span className=\"text-green-500 text-xl\">?</span>\n              <div>\n                <p className=\"font-medium text-green-800\">Claude Sonnet 4 Connected</p>\n                <p className=\"text-sm text-green-600\">AI-enhanced predictions are active</p>\n              </div>\n            </div>\n            <button\n              onClick={disconnectClaudeAI}\n              className=\"btn btn-sm btn-outline text-red-600 border-red-300 hover:bg-red-50\"\n            >\n              Disconnect\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderConfigurationSection = () => (\n    <div className=\"card mb-6\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">?? Selection Configuration</h3>\n        <p className=\"card-subtitle\">Customize your prediction settings</p>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        \n        {/* Historical Data Range */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ?? Historical Data Range\n          </label>\n          <select\n            value={historicalRecordsLimit}\n            onChange={(e) => onDataLimitChange(parseInt(e.target.value))}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={isLoadingHistory}\n          >\n            {historicalDataOptions.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label} {option.recommended ? '?' : ''}\n              </option>\n            ))}\n          </select>\n          {isLoadingHistory && (\n            <p className=\"text-xs text-gray-500 mt-1\">Loading historical data...</p>\n          )}\n        </div>\n\n        {/* Selection Mode */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ?? Selection Mode\n          </label>\n          <select\n            value={selectionMode}\n            onChange={(e) => setSelectionMode(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            {selectionModeOptions.map(option => (\n              <option \n                key={option.value} \n                value={option.value}\n                disabled={option.requiresAI && !aiEnabled}\n              >\n                {option.icon} {option.label}\n                {option.requiresAI && !aiEnabled ? ' (Requires AI)' : ''}\n              </option>\n            ))}\n          </select>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            {selectionModeOptions.find(opt => opt.value === selectionMode)?.description}\n          </p>\n        </div>\n\n        {/* Number of Sets */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ?? Number of Sets\n          </label>\n          <select\n            value={numberOfSets}\n            onChange={(e) => setNumberOfSets(parseInt(e.target.value))}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            {[3, 4, 5, 6, 7, 8].map(num => (\n              <option key={num} value={num}>{num} sets</option>\n            ))}\n          </select>\n          <div className=\"flex items-center mt-2\">\n            <input\n              type=\"checkbox\"\n              id=\"auto-refresh\"\n              checked={autoRefresh}\n              onChange={(e) => setAutoRefresh(e.target.checked)}\n              className=\"mr-2\"\n            />\n            <label htmlFor=\"auto-refresh\" className=\"text-xs text-gray-600\">\n              Auto-refresh every 5 minutes\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSelectionCard = (selection) => (\n    <div \n      key={selection.id}\n      className={`card cursor-pointer transition-all duration-200 ${\n        selectedSetIds.includes(selection.id) ? 'ring-2 ring-blue-500 bg-blue-50' : 'hover:shadow-lg'\n      }`}\n      onClick={() => toggleSelection(selection.id)}\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-3\">\n        <div className=\"flex items-center gap-2\">\n          <h4 className=\"font-semibold text-gray-900 text-sm\">\n            {selection.name}\n          </h4>\n          {selection.claudeGenerated && (\n            <span className=\"claude-badge\">Claude</span>\n          )}\n          {selection.isHybrid && (\n            <span className=\"hybrid-badge\">Hybrid</span>\n          )}\n        </div>\n        \n        <div className={`confidence-indicator ${getConfidenceClass(selection.confidence)}`}>\n          {selection.confidence}%\n        </div>\n      </div>\n\n      {/* Numbers */}\n      <div className=\"flex items-center justify-center gap-2 mb-4\">\n        {selection.numbers.map((num, index) => (\n          <div key={index} className=\"number-ball number-ball-main\">\n            {num}\n          </div>\n        ))}\n        <div className=\"mx-2 text-gray-400 font-bold\">|</div>\n        <div className=\"number-ball number-ball-powerball\">\n          {selection.powerball}\n        </div>\n      </div>\n\n      {/* Description */}\n      <p className=\"text-xs text-gray-600 mb-3 text-center\">\n        {selection.description}\n      </p>\n\n      {/* Actions */}\n      <div className=\"flex gap-2\">\n        <button\n          onClick={(e) => {\n            e.stopPropagation();\n            copySelection(selection);\n          }}\n          className=\"btn btn-sm btn-outline flex-1\"\n        >\n          ?? Copy\n        </button>\n        \n        {selection.claudeGenerated && selection.claudeInsights && (\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              alert(selection.claudeInsights);\n            }}\n            className=\"btn btn-sm btn-claude\"\n          >\n            ?? Insights\n          </button>\n        )}\n      </div>\n\n      {/* Technical Details (Expandable) */}\n      <details className=\"mt-3 text-xs\">\n        <summary className=\"cursor-pointer text-gray-500 hover:text-gray-700\">\n          Technical Details\n        </summary>\n        <div className=\"mt-2 p-2 bg-gray-50 rounded text-gray-600\">\n          <p><strong>Strategy:</strong> {selection.actualStrategy}</p>\n          <p><strong>Analysis:</strong> {selection.technicalAnalysis}</p>\n          <p><strong>Source:</strong> {selection.source || 'algorithm'}</p>\n        </div>\n      </details>\n    </div>\n  );\n\n  const renderGenerationControls = () => (\n    <div className=\"flex flex-wrap items-center justify-between gap-3 mb-6\">\n      <div className=\"flex items-center gap-3\">\n        <button\n          onClick={aiEnabled ? generateClaudeHybridSelections : generateAlgorithmSelections}\n          disabled={isGeneratingSelections}\n          className={`btn ${aiEnabled ? 'btn-claude' : 'btn-primary'}`}\n        >\n          {isGeneratingSelections ? (\n            <>\n              <div className=\"loading-spinner\" />\n              <span>Generating...</span>\n            </>\n          ) : (\n            <>\n              <span>{aiEnabled ? '???' : '??'}</span>\n              <span>Generate New Sets</span>\n            </>\n          )}\n        </button>\n        \n        {quickSelectionSets.length > 0 && (\n          <button\n            onClick={copyAllSelections}\n            className=\"btn btn-secondary\"\n          >\n            ?? Copy All\n          </button>\n        )}\n      </div>\n      \n      {lastGenerationTime && (\n        <div className=\"text-xs text-gray-500\">\n          Last generated: {lastGenerationTime.toLocaleTimeString()}\n        </div>\n      )}\n    </div>\n  );\n\n  // ===========================================================================\n  // MAIN RENDER\n  // ===========================================================================\n  \n  return (\n    <div className=\"space-y-6\">\n      \n      {/* AI Setup Section */}\n      {renderAISetupSection()}\n\n      {/* Configuration Section */}\n      {renderConfigurationSection()}\n\n      {/* Generation Controls */}\n      {renderGenerationControls()}\n\n      {/* Selection Grid */}\n      {quickSelectionSets.length > 0 ? (\n        <div className=\"selection-grid\">\n          {quickSelectionSets.map(renderSelectionCard)}\n        </div>\n      ) : (\n        <div className=\"card text-center py-12\">\n          <div className=\"text-6xl mb-4\">\n            {aiEnabled ? '???' : '??'}\n          </div>\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">\n            {isGeneratingSelections ? 'Generating Selections...' : 'Ready to Generate'}\n          </h3>\n          <p className=\"text-gray-600 mb-6\">\n            {aiEnabled \n              ? 'Click \"Generate New Sets\" to create Claude Sonnet 4 enhanced predictions'\n              : 'Click \"Generate New Sets\" to create algorithm-based predictions'\n            }\n          </p>\n          {!isGeneratingSelections && (\n            <button\n              onClick={aiEnabled ? generateClaudeHybridSelections : generateAlgorithmSelections}\n              className={`btn btn-lg ${aiEnabled ? 'btn-claude' : 'btn-primary'}`}\n            >\n              <span>{aiEnabled ? '???' : '??'}</span>\n              <span>Generate Selections</span>\n            </button>\n          )}\n        </div>\n      )}\n\n      {/* Selected Sets Summary */}\n      {selectedSetIds.length > 0 && (\n        <div className=\"card bg-blue-50 border-blue-200\">\n          <h4 className=\"font-semibold text-blue-800 mb-2\">\n            ?? Selected Sets ({selectedSetIds.length})\n          </h4>\n          <div className=\"space-y-1 text-sm\">\n            {selectedSetIds.map(setId => {\n              const selection = quickSelectionSets.find(s => s.id === setId);\n              return selection ? (\n                <p key={setId} className=\"text-blue-700\">\n                  {selection.name}: {formatNumbers(selection.numbers, selection.powerball)}\n                </p>\n              ) : null;\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","// LCv2 Number Selector Component - Manual Number Selection\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport { LOTTERY_RULES, SUCCESS_MESSAGES } from '../utils/constants.js';\nimport { \n  isValidMainNumber, \n  isValidPowerball, \n  generateQuickPick, \n  formatNumbers,\n  saveToStorage,\n  loadFromStorage \n} from '../utils/helpers.js';\n\nexport default function NumberSelector({ historicalStats, dataStatus, setDataStatus }) {\n  \n  // ===========================================================================\n  // STATE MANAGEMENT\n  // ===========================================================================\n  \n  // Current selection state\n  const [selectedNumbers, setSelectedNumbers] = useState([]);\n  const [powerball, setPowerball] = useState('');\n  \n  // Saved selections\n  const [savedSelections, setSavedSelections] = useState([]);\n  \n  // UI state\n  const [selectionMode, setSelectionMode] = useState('manual'); // 'manual', 'quick-pick', 'pattern'\n  const [showStatistics, setShowStatistics] = useState(false);\n  const [filterMode, setFilterMode] = useState('all'); // 'all', 'hot', 'cold', 'overdue'\n\n  // ===========================================================================\n  // EFFECTS\n  // ===========================================================================\n  \n  // Load saved selections on mount\n  useEffect(() => {\n    const saved = loadFromStorage('lcv2_saved_selections', []);\n    setSavedSelections(saved);\n  }, []);\n\n  // Save selections when they change\n  useEffect(() => {\n    saveToStorage('lcv2_saved_selections', savedSelections);\n  }, [savedSelections]);\n\n  // ===========================================================================\n  // COMPUTED VALUES\n  // ===========================================================================\n  \n  const numberStatistics = useMemo(() => {\n    if (!historicalStats || !historicalStats.drawings) return {};\n    \n    const frequency = {};\n    const lastDrawn = {};\n    const drawings = historicalStats.drawings;\n    \n    // Initialize counters\n    for (let i = 1; i <= 69; i++) {\n      frequency[i] = 0;\n      lastDrawn[i] = drawings.length; // Start with max gap\n    }\n    \n    // Count frequencies and track last drawn\n    drawings.forEach((drawing, index) => {\n      if (drawing.numbers) {\n        drawing.numbers.forEach(num => {\n          if (num >= 1 && num <= 69) {\n            frequency[num]++;\n            lastDrawn[num] = Math.min(lastDrawn[num], index);\n          }\n        });\n      }\n    });\n    \n    // Calculate statistics\n    const sortedByFreq = Object.entries(frequency)\n      .sort(([,a], [,b]) => b - a)\n      .map(([num, freq]) => ({ number: parseInt(num), frequency: freq }));\n    \n    const hot = sortedByFreq.slice(0, 15);\n    const cold = sortedByFreq.slice(-15);\n    const overdue = Object.entries(lastDrawn)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 15)\n      .map(([num, gap]) => ({ number: parseInt(num), gap }));\n    \n    return { frequency, lastDrawn, hot, cold, overdue, total: drawings.length };\n  }, [historicalStats]);\n\n  const filteredNumbers = useMemo(() => {\n    const allNumbers = Array.from({ length: 69 }, (_, i) => i + 1);\n    \n    if (filterMode === 'all') return allNumbers;\n    \n    if (!numberStatistics.hot) return allNumbers;\n    \n    switch (filterMode) {\n      case 'hot':\n        return numberStatistics.hot.map(item => item.number);\n      case 'cold':\n        return numberStatistics.cold.map(item => item.number);\n      case 'overdue':\n        return numberStatistics.overdue.map(item => item.number);\n      default:\n        return allNumbers;\n    }\n  }, [filterMode, numberStatistics]);\n\n  const isSelectionComplete = selectedNumbers.length === 5 && powerball;\n  \n  const selectionSummary = useMemo(() => {\n    if (selectedNumbers.length === 0) return null;\n    \n    const sum = selectedNumbers.reduce((acc, num) => acc + num, 0);\n    const evenCount = selectedNumbers.filter(num => num % 2 === 0).length;\n    const lowCount = selectedNumbers.filter(num => num <= 35).length;\n    const highCount = selectedNumbers.filter(num => num > 35).length;\n    \n    return {\n      sum,\n      evenCount,\n      oddCount: selectedNumbers.length - evenCount,\n      lowCount,\n      highCount,\n      range: selectedNumbers.length > 0 ? Math.max(...selectedNumbers) - Math.min(...selectedNumbers) : 0\n    };\n  }, [selectedNumbers]);\n\n  // ===========================================================================\n  // EVENT HANDLERS\n  // ===========================================================================\n  \n  const toggleNumber = useCallback((num) => {\n    if (selectedNumbers.includes(num)) {\n      setSelectedNumbers(prev => prev.filter(n => n !== num));\n    } else if (selectedNumbers.length < LOTTERY_RULES.mainNumbers.count) {\n      setSelectedNumbers(prev => [...prev, num].sort((a, b) => a - b));\n    } else {\n      setDataStatus('?? You can only select 5 main numbers');\n      setTimeout(() => setDataStatus(''), 3000);\n    }\n  }, [selectedNumbers, setDataStatus]);\n\n  const selectPowerball = useCallback((num) => {\n    setPowerball(num);\n  }, []);\n\n  const clearSelection = useCallback(() => {\n    setSelectedNumbers([]);\n    setPowerball('');\n    setDataStatus('??? Selection cleared');\n    setTimeout(() => setDataStatus(''), 2000);\n  }, [setDataStatus]);\n\n  const quickPick = useCallback(() => {\n    const pick = generateQuickPick();\n    setSelectedNumbers(pick.numbers);\n    setPowerball(pick.powerball);\n    setDataStatus('?? Quick pick generated');\n    setTimeout(() => setDataStatus(''), 2000);\n  }, [setDataStatus]);\n\n  const saveSelection = useCallback(() => {\n    if (!isSelectionComplete) {\n      alert('Please select 5 numbers and a Powerball number first.');\n      return;\n    }\n    \n    const newSelection = {\n      id: Date.now(),\n      numbers: [...selectedNumbers],\n      powerball: powerball,\n      timestamp: new Date().toLocaleString(),\n      formatted: formatNumbers(selectedNumbers, powerball),\n      name: `Selection ${savedSelections.length + 1}`\n    };\n    \n    setSavedSelections(prev => [newSelection, ...prev.slice(0, 19)]); // Keep max 20\n    setDataStatus('?? Selection saved successfully');\n    setTimeout(() => setDataStatus(''), 3000);\n  }, [isSelectionComplete, selectedNumbers, powerball, savedSelections.length, setDataStatus]);\n\n  const loadSelection = useCallback((selection) => {\n    setSelectedNumbers(selection.numbers);\n    setPowerball(selection.powerball);\n    setDataStatus(`?? Loaded: ${selection.name}`);\n    setTimeout(() => setDataStatus(''), 3000);\n  }, [setDataStatus]);\n\n  const deleteSelection = useCallback((id) => {\n    setSavedSelections(prev => prev.filter(sel => sel.id !== id));\n    setDataStatus('??? Selection deleted');\n    setTimeout(() => setDataStatus(''), 2000);\n  }, [setDataStatus]);\n\n  const copySelection = useCallback((numbers = selectedNumbers, pb = powerball) => {\n    if (numbers.length === 5 && pb) {\n      const formatted = formatNumbers(numbers, pb);\n      navigator.clipboard.writeText(formatted);\n      setDataStatus(`?? Copied: ${formatted}`);\n      setTimeout(() => setDataStatus(''), 3000);\n    } else {\n      alert('Please complete your selection first.');\n    }\n  }, [selectedNumbers, powerball, setDataStatus]);\n\n  const generatePattern = useCallback((patternType) => {\n    let numbers = [];\n    \n    switch (patternType) {\n      case 'diagonal':\n        numbers = [7, 14, 28, 42, 56];\n        break;\n      case 'corners':\n        numbers = [1, 69, 35, 36, 37];\n        break;\n      case 'cross':\n        numbers = [35, 21, 49, 28, 42];\n        break;\n      case 'lucky':\n        numbers = [7, 11, 21, 33, 47];\n        break;\n      default:\n        numbers = generateQuickPick().numbers;\n    }\n    \n    setSelectedNumbers(numbers);\n    setPowerball(Math.floor(Math.random() * 26) + 1);\n    setDataStatus(`?? ${patternType} pattern applied`);\n    setTimeout(() => setDataStatus(''), 3000);\n  }, [setDataStatus]);\n\n  // ===========================================================================\n  // RENDER HELPERS\n  // ===========================================================================\n  \n  const renderCurrentSelection = () => (\n    <div className=\"card mb-6\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">?? Your Current Selection</h3>\n        <p className=\"card-subtitle\">\n          Select {5 - selectedNumbers.length} more numbers and {powerball ? '0' : '1'} Powerball\n        </p>\n      </div>\n      \n      <div className=\"text-center mb-4\">\n        <div className=\"flex items-center justify-center gap-3 mb-4\">\n          {/* Main Numbers */}\n          <div className=\"flex gap-2\">\n            {Array.from({ length: 5 }, (_, i) => (\n              <div \n                key={i} \n                className={`number-ball ${\n                  selectedNumbers[i] ? 'number-ball-selected' : 'border-2 border-dashed border-gray-300 bg-gray-50 text-gray-400'\n                }`}\n              >\n                {selectedNumbers[i] || '?'}\n              </div>\n            ))}\n          </div>\n          \n          {/* Separator */}\n          <div className=\"text-2xl text-gray-400 font-bold\">|</div>\n          \n          {/* Powerball */}\n          <div className={`number-ball ${\n            powerball ? 'number-ball-powerball' : 'border-2 border-dashed border-red-300 bg-red-50 text-red-400'\n          }`}>\n            {powerball || '?'}\n          </div>\n        </div>\n        \n        {isSelectionComplete && (\n          <div className=\"text-sm text-green-600 font-medium\">\n            ? Selection Complete: {formatNumbers(selectedNumbers, powerball)}\n          </div>\n        )}\n      </div>\n      \n      {/* Selection Summary */}\n      {selectionSummary && (\n        <div className=\"bg-gray-50 rounded-lg p-3 mb-4\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-2\">?? Selection Analysis</h4>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3 text-xs\">\n            <div>\n              <span className=\"text-gray-500\">Sum:</span>\n              <span className=\"ml-1 font-medium\">{selectionSummary.sum}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Even/Odd:</span>\n              <span className=\"ml-1 font-medium\">{selectionSummary.evenCount}/{selectionSummary.oddCount}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Low/High:</span>\n              <span className=\"ml-1 font-medium\">{selectionSummary.lowCount}/{selectionSummary.highCount}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Range:</span>\n              <span className=\"ml-1 font-medium\">{selectionSummary.range}</span>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Action Buttons */}\n      <div className=\"flex flex-wrap gap-2\">\n        <button onClick={quickPick} className=\"btn btn-primary\">\n          ?? Quick Pick\n        </button>\n        <button \n          onClick={clearSelection} \n          className=\"btn btn-secondary\"\n          disabled={selectedNumbers.length === 0 && !powerball}\n        >\n          ??? Clear\n        </button>\n        <button \n          onClick={saveSelection} \n          className=\"btn btn-success\"\n          disabled={!isSelectionComplete}\n        >\n          ?? Save\n        </button>\n        <button \n          onClick={() => copySelection()} \n          className=\"btn btn-outline\"\n          disabled={!isSelectionComplete}\n        >\n          ?? Copy\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderSelectionModes = () => (\n    <div className=\"card mb-6\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">?? Selection Tools</h3>\n        <p className=\"card-subtitle\">Choose how you want to select your numbers</p>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        \n        {/* Filter Mode */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ?? Number Filter\n          </label>\n          <select\n            value={filterMode}\n            onChange={(e) => setFilterMode(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"all\">All Numbers</option>\n            <option value=\"hot\">Hot Numbers (Most Frequent)</option>\n            <option value=\"cold\">Cold Numbers (Least Frequent)</option>\n            <option value=\"overdue\">Overdue Numbers</option>\n          </select>\n        </div>\n        \n        {/* Quick Patterns */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ?? Quick Patterns\n          </label>\n          <select\n            onChange={(e) => e.target.value && generatePattern(e.target.value)}\n            value=\"\"\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"\">Select Pattern...</option>\n            <option value=\"diagonal\">Diagonal Pattern</option>\n            <option value=\"corners\">Corner Numbers</option>\n            <option value=\"cross\">Cross Pattern</option>\n            <option value=\"lucky\">Lucky Numbers</option>\n          </select>\n        </div>\n        \n        {/* Statistics Toggle */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ?? Statistics\n          </label>\n          <button\n            onClick={() => setShowStatistics(!showStatistics)}\n            className={`w-full btn ${showStatistics ? 'btn-primary' : 'btn-outline'}`}\n          >\n            {showStatistics ? 'Hide Stats' : 'Show Stats'}\n          </button>\n        </div>\n        \n        {/* Bulk Actions */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ? Bulk Actions\n          </label>\n          <button\n            onClick={() => {\n              for (let i = 0; i < 5; i++) {\n                setTimeout(() => quickPick(), i * 100);\n              }\n            }}\n            className=\"w-full btn btn-secondary\"\n          >\n            Generate 5 Sets\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderNumberGrid = () => (\n    <div className=\"card mb-6\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">\n          ?? Main Numbers (1-69) \n          {filterMode !== 'all' && (\n            <span className=\"text-sm font-normal text-gray-600\">\n              - Showing {filterMode} numbers\n            </span>\n          )}\n        </h3>\n        <p className=\"card-subtitle\">\n          Select 5 numbers � {selectedNumbers.length}/5 selected\n        </p>\n      </div>\n      \n      <div className=\"number-grid number-grid-main\">\n        {Array.from({ length: 69 }, (_, i) => i + 1).map(num => {\n          const isSelected = selectedNumbers.includes(num);\n          const isDisabled = selectedNumbers.length >= 5 && !isSelected;\n          const isFiltered = !filteredNumbers.includes(num);\n          const stats = numberStatistics.frequency && numberStatistics.frequency[num];\n          \n          return (\n            <button\n              key={num}\n              onClick={() => !isDisabled && !isFiltered && toggleNumber(num)}\n              disabled={isDisabled || isFiltered}\n              className={`number-ball relative ${\n                isSelected ? 'number-ball-selected' : \n                isDisabled || isFiltered ? 'number-ball-disabled' : 'number-ball-main'\n              }`}\n              title={\n                stats ? `Frequency: ${stats} (${((stats / numberStatistics.total) * 100).toFixed(1)}%)` : \n                `Number ${num}`\n              }\n            >\n              {num}\n              {showStatistics && stats && (\n                <div className=\"absolute -top-1 -right-1 bg-blue-500 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center\">\n                  {Math.round((stats / numberStatistics.total) * 100)}\n                </div>\n              )}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n\n  const renderPowerballGrid = () => (\n    <div className=\"card mb-6\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">? Powerball (1-26)</h3>\n        <p className=\"card-subtitle\">\n          Select 1 Powerball number {powerball && `� Selected: ${powerball}`}\n        </p>\n      </div>\n      \n      <div className=\"number-grid number-grid-powerball\">\n        {Array.from({ length: 26 }, (_, i) => i + 1).map(num => (\n          <button\n            key={num}\n            onClick={() => selectPowerball(num)}\n            className={`number-ball ${\n              powerball === num ? 'number-ball-powerball border-red-500 ring-2 ring-red-200' : \n              'border-2 border-red-300 text-red-700 hover:bg-red-50'\n            }`}\n          >\n            {num}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderSavedSelections = () => (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">?? Saved Selections ({savedSelections.length}/20)</h3>\n        <p className=\"card-subtitle\">Your saved number combinations</p>\n      </div>\n      \n      {savedSelections.length > 0 ? (\n        <div className=\"space-y-3\">\n          {savedSelections.map(selection => (\n            <div \n              key={selection.id}\n              className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n            >\n              <div className=\"flex-1\">\n                <div className=\"font-medium text-sm text-gray-900 mb-1\">\n                  {selection.name}\n                </div>\n                <div className=\"text-sm text-gray-600 mb-1\">\n                  {selection.formatted}\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  Saved: {selection.timestamp}\n                </div>\n              </div>\n              \n              <div className=\"flex gap-2\">\n                <button\n                  onClick={() => loadSelection(selection)}\n                  className=\"btn btn-sm btn-primary\"\n                  title=\"Load this selection\"\n                >\n                  ?? Load\n                </button>\n                <button\n                  onClick={() => copySelection(selection.numbers, selection.powerball)}\n                  className=\"btn btn-sm btn-outline\"\n                  title=\"Copy to clipboard\"\n                >\n                  ??\n                </button>\n                <button\n                  onClick={() => deleteSelection(selection.id)}\n                  className=\"btn btn-sm btn-secondary text-red-600\"\n                  title=\"Delete this selection\"\n                >\n                  ???\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-8 text-gray-500\">\n          <div className=\"text-4xl mb-2\">??</div>\n          <p>No saved selections yet</p>\n          <p className=\"text-sm\">Complete a selection and click \"Save\" to store it here</p>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderStatistics = () => {\n    if (!showStatistics || !numberStatistics.hot) return null;\n    \n    return (\n      <div className=\"card mb-6\">\n        <div className=\"card-header\">\n          <h3 className=\"card-title\">?? Number Statistics</h3>\n          <p className=\"card-subtitle\">Based on {numberStatistics.total} historical drawings</p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          \n          {/* Hot Numbers */}\n          <div>\n            <h4 className=\"font-medium text-gray-700 mb-2\">?? Hot Numbers</h4>\n            <div className=\"space-y-1\">\n              {numberStatistics.hot.slice(0, 10).map(item => (\n                <div key={item.number} className=\"flex justify-between text-sm\">\n                  <span>{item.number}</span>\n                  <span className=\"text-gray-500\">{item.frequency}x</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {/* Cold Numbers */}\n          <div>\n            <h4 className=\"font-medium text-gray-700 mb-2\">?? Cold Numbers</h4>\n            <div className=\"space-y-1\">\n              {numberStatistics.cold.slice(0, 10).map(item => (\n                <div key={item.number} className=\"flex justify-between text-sm\">\n                  <span>{item.number}</span>\n                  <span className=\"text-gray-500\">{item.frequency}x</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {/* Overdue Numbers */}\n          <div>\n            <h4 className=\"font-medium text-gray-700 mb-2\">? Overdue Numbers</h4>\n            <div className=\"space-y-1\">\n              {numberStatistics.overdue.slice(0, 10).map(item => (\n                <div key={item.number} className=\"flex justify-between text-sm\">\n                  <span>{item.number}</span>\n                  <span className=\"text-gray-500\">{item.gap} draws ago</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // ===========================================================================\n  // MAIN RENDER\n  // ===========================================================================\n  \n  return (\n    <div className=\"space-y-6\">\n      \n      {/* Current Selection */}\n      {renderCurrentSelection()}\n      \n      {/* Selection Tools */}\n      {renderSelectionModes()}\n      \n      {/* Statistics */}\n      {renderStatistics()}\n      \n      {/* Number Grids */}\n      {renderNumberGrid()}\n      {renderPowerballGrid()}\n      \n      {/* Saved Selections */}\n      {renderSavedSelections()}\n    </div>\n  );\n}","// LCv2 Tax Calculator Component - Advanced Winnings Analysis\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport { formatCurrency, formatPercentage } from '../utils/helpers.js';\n\nexport default function TaxCalculator({ currentJackpot, dataStatus, setDataStatus }) {\n  \n  // ===========================================================================\n  // STATE MANAGEMENT\n  // ===========================================================================\n  \n  // Input state\n  const [jackpotAmount, setJackpotAmount] = useState('');\n  const [payoutType, setPayoutType] = useState('lump_sum'); // 'lump_sum' or 'annuity'\n  const [state, setState] = useState('no_state_tax');\n  const [filingStatus, setFilingStatus] = useState('single');\n  const [additionalIncome, setAdditionalIncome] = useState('');\n  \n  // Calculation state\n  const [calculationResults, setCalculationResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [showComparison, setShowComparison] = useState(false);\n  const [showBreakdown, setShowBreakdown] = useState(true);\n\n  // ===========================================================================\n  // EFFECTS\n  // ===========================================================================\n  \n  // Auto-populate from current jackpot\n  useEffect(() => {\n    if (currentJackpot && currentJackpot.amount && !jackpotAmount) {\n      setJackpotAmount(currentJackpot.amount.toString());\n    }\n  }, [currentJackpot, jackpotAmount]);\n\n  // ===========================================================================\n  // TAX CONFIGURATION\n  // ===========================================================================\n  \n  const federalTaxBrackets2024 = useMemo(() => ({\n    single: [\n      { min: 0, max: 11000, rate: 0.10 },\n      { min: 11000, max: 44725, rate: 0.12 },\n      { min: 44725, max: 95375, rate: 0.22 },\n      { min: 95375, max: 182050, rate: 0.24 },\n      { min: 182050, max: 231250, rate: 0.32 },\n      { min: 231250, max: 578125, rate: 0.35 },\n      { min: 578125, max: Infinity, rate: 0.37 }\n    ],\n    married: [\n      { min: 0, max: 22000, rate: 0.10 },\n      { min: 22000, max: 89450, rate: 0.12 },\n      { min: 89450, max: 190750, rate: 0.22 },\n      { min: 190750, max: 364200, rate: 0.24 },\n      { min: 364200, max: 462500, rate: 0.32 },\n      { min: 462500, max: 693750, rate: 0.35 },\n      { min: 693750, max: Infinity, rate: 0.37 }\n    ]\n  }), []);\n\n  const stateTaxRates = useMemo(() => ({\n    no_state_tax: { name: 'No State Tax', rate: 0.0, note: 'AL, AK, FL, NV, NH, SD, TN, TX, WA, WY' },\n    california: { name: 'California', rate: 0.133, note: 'Highest state tax rate' },\n    new_york: { name: 'New York', rate: 0.1082, note: 'Plus local taxes may apply' },\n    illinois: { name: 'Illinois', rate: 0.0495, note: 'Flat rate' },\n    pennsylvania: { name: 'Pennsylvania', rate: 0.0307, note: 'Flat rate' },\n    michigan: { name: 'Michigan', rate: 0.0425, note: 'Flat rate' },\n    ohio: { name: 'Ohio', rate: 0.0399, note: 'Variable rate' },\n    georgia: { name: 'Georgia', rate: 0.0575, note: 'Top rate' },\n    north_carolina: { name: 'North Carolina', rate: 0.0499, note: 'Flat rate' },\n    arizona: { name: 'Arizona', rate: 0.045, note: 'Top rate' },\n    colorado: { name: 'Colorado', rate: 0.0455, note: 'Flat rate' },\n    connecticut: { name: 'Connecticut', rate: 0.0699, note: 'Top rate' },\n    massachusetts: { name: 'Massachusetts', rate: 0.05, note: 'Flat rate' },\n    new_jersey: { name: 'New Jersey', rate: 0.1075, note: 'Top rate' },\n    maryland: { name: 'Maryland', rate: 0.0575, note: 'Plus local taxes' }\n  }), []);\n\n  // ===========================================================================\n  // CALCULATION FUNCTIONS\n  // ===========================================================================\n  \n  const calculateFederalTax = useCallback((taxableIncome, status) => {\n    const brackets = federalTaxBrackets2024[status] || federalTaxBrackets2024.single;\n    let totalTax = 0;\n    let remainingIncome = taxableIncome;\n    const breakdown = [];\n\n    for (const bracket of brackets) {\n      const taxableAtThisBracket = Math.min(remainingIncome, bracket.max - bracket.min);\n      \n      if (taxableAtThisBracket > 0) {\n        const taxAtThisBracket = taxableAtThisBracket * bracket.rate;\n        totalTax += taxAtThisBracket;\n        \n        breakdown.push({\n          range: `${formatCurrency(bracket.min)} - ${bracket.max === Infinity ? '8' : formatCurrency(bracket.max)}`,\n          rate: formatPercentage(bracket.rate * 100),\n          taxableAmount: formatCurrency(taxableAtThisBracket),\n          tax: formatCurrency(taxAtThisBracket)\n        });\n        \n        remainingIncome -= taxableAtThisBracket;\n        \n        if (remainingIncome <= 0) break;\n      }\n    }\n\n    return { totalTax, breakdown };\n  }, [federalTaxBrackets2024]);\n\n  const calculateTaxes = useCallback((grossWinnings, payout, stateCode, filing, additionalInc = 0) => {\n    const additionalIncomeNum = parseFloat(additionalInc) || 0;\n    const totalIncome = grossWinnings + additionalIncomeNum;\n    \n    // Federal withholding (24% for lottery winnings over $5,000)\n    const federalWithholding = grossWinnings * 0.24;\n    \n    // Calculate actual federal tax owed\n    const federalCalc = calculateFederalTax(totalIncome, filing);\n    const federalTaxOwed = federalCalc.totalTax;\n    \n    // State tax\n    const stateInfo = stateTaxRates[stateCode] || stateTaxRates.no_state_tax;\n    const stateTax = grossWinnings * stateInfo.rate;\n    \n    // Net amount calculation\n    const totalTaxes = federalTaxOwed + stateTax;\n    const netWinnings = grossWinnings - totalTaxes;\n    \n    // Additional federal tax owed (if withholding isn't enough)\n    const additionalFederalOwed = Math.max(0, federalTaxOwed - federalWithholding);\n    \n    return {\n      grossWinnings,\n      federalWithholding,\n      federalTaxOwed,\n      federalTaxBreakdown: federalCalc.breakdown,\n      stateTax,\n      stateInfo,\n      totalTaxes,\n      netWinnings,\n      additionalFederalOwed,\n      effectiveTaxRate: (totalTaxes / grossWinnings) * 100,\n      payoutType: payout,\n      filingStatus: filing\n    };\n  }, [calculateFederalTax, stateTaxRates]);\n\n  const performCalculation = useCallback(async () => {\n    const amount = parseFloat(jackpotAmount);\n    \n    if (!amount || amount < 1000000) {\n      alert('Please enter a valid jackpot amount (minimum $1,000,000)');\n      return;\n    }\n    \n    setIsCalculating(true);\n    setDataStatus('?? Calculating tax breakdown...');\n    \n    try {\n      // Simulate API delay for better UX\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      let results;\n      \n      if (showComparison) {\n        // Calculate both lump sum and annuity\n        const lumpSumAmount = amount * 0.6; // Typical lump sum is ~60% of advertised jackpot\n        const annuityPayment = amount / 30; // 30 annual payments\n        \n        const lumpSumCalc = calculateTaxes(lumpSumAmount, 'lump_sum', state, filingStatus, additionalIncome);\n        const annuityCalc = calculateTaxes(annuityPayment, 'annuity', state, filingStatus, additionalIncome);\n        \n        results = {\n          type: 'comparison',\n          data: {\n            advertised: amount,\n            lumpSum: lumpSumCalc,\n            annuity: {\n              ...annuityCalc,\n              totalGross: amount,\n              totalNet: annuityCalc.netWinnings * 30,\n              totalTaxes: annuityCalc.totalTaxes * 30\n            }\n          }\n        };\n      } else {\n        // Single calculation\n        const winningsAmount = payoutType === 'lump_sum' ? amount * 0.6 : amount / 30;\n        const calc = calculateTaxes(winningsAmount, payoutType, state, filingStatus, additionalIncome);\n        \n        results = {\n          type: 'single',\n          data: {\n            advertised: amount,\n            calculation: calc\n          }\n        };\n      }\n      \n      setCalculationResults(results);\n      setDataStatus('? Tax calculation completed');\n      \n    } catch (error) {\n      console.error('Tax calculation failed:', error);\n      setDataStatus('? Calculation failed');\n    } finally {\n      setIsCalculating(false);\n      setTimeout(() => setDataStatus(''), 3000);\n    }\n  }, [jackpotAmount, payoutType, state, filingStatus, additionalIncome, showComparison, calculateTaxes, setDataStatus]);\n\n  // ===========================================================================\n  // RENDER HELPERS\n  // ===========================================================================\n  \n  const renderInputSection = () => (\n    <div className=\"card mb-6\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">?? Tax Calculator Settings</h3>\n        <p className=\"card-subtitle\">Configure your lottery winning scenario</p>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        \n        {/* Jackpot Amount */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ?? Jackpot Amount\n          </label>\n          <div className=\"relative\">\n            <span className=\"absolute left-3 top-2 text-gray-500\">$</span>\n            <input\n              type=\"number\"\n              value={jackpotAmount}\n              onChange={(e) => setJackpotAmount(e.target.value)}\n              placeholder=\"100000000\"\n              className=\"w-full pl-8 pr-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              min=\"1000000\"\n              step=\"1000000\"\n            />\n          </div>\n          {currentJackpot && (\n            <button\n              onClick={() => setJackpotAmount(currentJackpot.amount.toString())}\n              className=\"mt-1 text-xs text-blue-600 hover:text-blue-800\"\n            >\n              Use current jackpot: {formatCurrency(currentJackpot.amount)}\n            </button>\n          )}\n        </div>\n\n        {/* Payout Type */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ?? Payout Type\n          </label>\n          <select\n            value={payoutType}\n            onChange={(e) => setPayoutType(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={showComparison}\n          >\n            <option value=\"lump_sum\">Lump Sum (Cash Option)</option>\n            <option value=\"annuity\">Annuity (30 Payments)</option>\n          </select>\n          {showComparison && (\n            <p className=\"text-xs text-gray-500 mt-1\">Comparison mode calculates both options</p>\n          )}\n        </div>\n\n        {/* Filing Status */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ?? Filing Status\n          </label>\n          <select\n            value={filingStatus}\n            onChange={(e) => setFilingStatus(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"single\">Single</option>\n            <option value=\"married\">Married Filing Jointly</option>\n          </select>\n        </div>\n\n        {/* State */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ??? State\n          </label>\n          <select\n            value={state}\n            onChange={(e) => setState(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            {Object.entries(stateTaxRates).map(([key, info]) => (\n              <option key={key} value={key}>\n                {info.name} ({formatPercentage(info.rate * 100)})\n              </option>\n            ))}\n          </select>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            {stateTaxRates[state]?.note}\n          </p>\n        </div>\n\n        {/* Additional Income */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            ?? Additional Annual Income\n          </label>\n          <div className=\"relative\">\n            <span className=\"absolute left-3 top-2 text-gray-500\">$</span>\n            <input\n              type=\"number\"\n              value={additionalIncome}\n              onChange={(e) => setAdditionalIncome(e.target.value)}\n              placeholder=\"75000\"\n              className=\"w-full pl-8 pr-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              min=\"0\"\n              step=\"1000\"\n            />\n          </div>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Your other income (affects tax brackets)\n          </p>\n        </div>\n\n        {/* Calculation Options */}\n        <div className=\"space-y-3\">\n          <div>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={showComparison}\n                onChange={(e) => setShowComparison(e.target.checked)}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Compare lump sum vs annuity</span>\n            </label>\n          </div>\n          \n          <div>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={showBreakdown}\n                onChange={(e) => setShowBreakdown(e.target.checked)}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Show detailed breakdown</span>\n            </label>\n          </div>\n        </div>\n      </div>\n      \n      {/* Calculate Button */}\n      <div className=\"mt-6 flex justify-center\">\n        <button\n          onClick={performCalculation}\n          disabled={isCalculating || !jackpotAmount}\n          className=\"btn btn-lg btn-primary\"\n        >\n          {isCalculating ? (\n            <>\n              <div className=\"loading-spinner\" />\n              <span>Calculating...</span>\n            </>\n          ) : (\n            <>\n              <span>??</span>\n              <span>Calculate Taxes</span>\n            </>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderSingleResult = (data) => {\n    const { advertised, calculation } = data;\n    \n    return (\n      <div className=\"space-y-6\">\n        \n        {/* Summary Cards */}\n        <div className=\"tax-summary-grid\">\n          <div className=\"tax-summary-item\">\n            <h4 className=\"font-semibold text-gray-800 mb-2\">?? Gross Winnings</h4>\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {formatCurrency(calculation.grossWinnings)}\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              {calculation.payoutType === 'lump_sum' ? 'Cash option' : 'Annual payment'}\n            </div>\n          </div>\n          \n          <div className=\"tax-summary-item negative\">\n            <h4 className=\"font-semibold text-gray-800 mb-2\">??? Total Taxes</h4>\n            <div className=\"text-2xl font-bold text-red-600\">\n              {formatCurrency(calculation.totalTaxes)}\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              {formatPercentage(calculation.effectiveTaxRate)} effective rate\n            </div>\n          </div>\n          \n          <div className=\"tax-summary-item positive\">\n            <h4 className=\"font-semibold text-gray-800 mb-2\">?? Net Winnings</h4>\n            <div className=\"text-2xl font-bold text-green-600\">\n              {formatCurrency(calculation.netWinnings)}\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              After all taxes\n            </div>\n          </div>\n        </div>\n\n        {/* Detailed Breakdown */}\n        {showBreakdown && (\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-title\">?? Tax Breakdown</h3>\n            </div>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"tax-breakdown-table\">\n                <thead>\n                  <tr>\n                    <th>Tax Type</th>\n                    <th>Rate</th>\n                    <th>Amount</th>\n                    <th>Notes</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Federal Withholding</td>\n                    <td>24.00%</td>\n                    <td>{formatCurrency(calculation.federalWithholding)}</td>\n                    <td>Automatic withholding</td>\n                  </tr>\n                  <tr>\n                    <td>Federal Tax Owed</td>\n                    <td>Variable</td>\n                    <td>{formatCurrency(calculation.federalTaxOwed)}</td>\n                    <td>Based on tax brackets</td>\n                  </tr>\n                  <tr>\n                    <td>State Tax</td>\n                    <td>{formatPercentage(calculation.stateInfo.rate * 100)}</td>\n                    <td>{formatCurrency(calculation.stateTax)}</td>\n                    <td>{calculation.stateInfo.name}</td>\n                  </tr>\n                  <tr className=\"font-semibold bg-gray-50\">\n                    <td>Total Taxes</td>\n                    <td>{formatPercentage(calculation.effectiveTaxRate)}</td>\n                    <td>{formatCurrency(calculation.totalTaxes)}</td>\n                    <td>Effective rate</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            \n            {calculation.additionalFederalOwed > 0 && (\n              <div className=\"mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                <h4 className=\"font-medium text-yellow-800 mb-1\">?? Additional Tax Owed</h4>\n                <p className=\"text-sm text-yellow-700\">\n                  You'll owe an additional <strong>{formatCurrency(calculation.additionalFederalOwed)}</strong> in federal taxes \n                  beyond the 24% withholding. Plan to set this aside for tax filing.\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Federal Tax Brackets */}\n        {showBreakdown && calculation.federalTaxBreakdown && (\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-title\">??? Federal Tax Brackets Applied</h3>\n              <p className=\"card-subtitle\">Your tax calculation by bracket ({calculation.filingStatus})</p>\n            </div>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"tax-breakdown-table\">\n                <thead>\n                  <tr>\n                    <th>Income Range</th>\n                    <th>Tax Rate</th>\n                    <th>Taxable Amount</th>\n                    <th>Tax Owed</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {calculation.federalTaxBreakdown.map((bracket, index) => (\n                    <tr key={index}>\n                      <td className=\"font-mono text-xs\">{bracket.range}</td>\n                      <td>{bracket.rate}</td>\n                      <td>{bracket.taxableAmount}</td>\n                      <td>{bracket.tax}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderComparisonResult = (data) => {\n    const { advertised, lumpSum, annuity } = data;\n    \n    return (\n      <div className=\"space-y-6\">\n        \n        {/* Comparison Overview */}\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h3 className=\"card-title\">?? Lump Sum vs Annuity Comparison</h3>\n            <p className=\"card-subtitle\">Advertised Jackpot: {formatCurrency(advertised)}</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            \n            {/* Lump Sum */}\n            <div className=\"border-2 border-blue-200 rounded-lg p-4 bg-blue-50\">\n              <h4 className=\"font-semibold text-blue-800 mb-3 text-center\">?? Lump Sum Option</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Gross Amount:</span>\n                  <span className=\"font-medium\">{formatCurrency(lumpSum.grossWinnings)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Total Taxes:</span>\n                  <span className=\"font-medium text-red-600\">{formatCurrency(lumpSum.totalTaxes)}</span>\n                </div>\n                <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                  <span>Net Amount:</span>\n                  <span className=\"text-green-600\">{formatCurrency(lumpSum.netWinnings)}</span>\n                </div>\n                <div className=\"text-xs text-gray-600 text-center mt-2\">\n                  Available immediately\n                </div>\n              </div>\n            </div>\n\n            {/* Annuity */}\n            <div className=\"border-2 border-green-200 rounded-lg p-4 bg-green-50\">\n              <h4 className=\"font-semibold text-green-800 mb-3 text-center\">?? Annuity Option</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Annual Payment:</span>\n                  <span className=\"font-medium\">{formatCurrency(annuity.grossWinnings)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Annual Taxes:</span>\n                  <span className=\"font-medium text-red-600\">{formatCurrency(annuity.totalTaxes)}</span>\n                </div>\n                <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                  <span>Annual Net:</span>\n                  <span className=\"text-green-600\">{formatCurrency(annuity.netWinnings)}</span>\n                </div>\n                <div className=\"text-xs text-gray-600 text-center mt-2\">\n                  30 annual payments\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Key Insights */}\n          <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n            <h4 className=\"font-medium text-gray-800 mb-2\">?? Key Insights</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"font-medium\">Immediate vs Total:</span>\n                <p className=\"text-gray-600\">\n                  Lump sum gives you {formatCurrency(lumpSum.netWinnings)} now vs \n                  {formatCurrency(annuity.totalNet)} total over 30 years.\n                </p>\n              </div>\n              <div>\n                <span className=\"font-medium\">Investment Opportunity:</span>\n                <p className=\"text-gray-600\">\n                  If you invest the lump sum at 4% annually, you'd break even with annuity payments.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderDisclaimer = () => (\n    <div className=\"card bg-yellow-50 border-yellow-200\">\n      <div className=\"flex items-start gap-3\">\n        <span className=\"text-yellow-500 text-xl\">??</span>\n        <div className=\"text-sm text-yellow-800\">\n          <h4 className=\"font-medium mb-2\">Important Tax Disclaimer</h4>\n          <ul className=\"space-y-1 text-xs\">\n            <li>� This calculator provides estimates only - actual taxes may vary</li>\n            <li>� Tax laws change frequently and vary by jurisdiction</li>\n            <li>� Additional taxes may apply (local, estate, gift taxes)</li>\n            <li>� Consult a qualified tax professional for personalized advice</li>\n            <li>� Federal withholding is 24% for lottery winnings over $5,000</li>\n            <li>� State tax rates and rules vary significantly</li>\n            <li>� Investment returns can significantly impact the lump sum vs annuity decision</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n\n  // ===========================================================================\n  // MAIN RENDER\n  // ===========================================================================\n  \n  return (\n    <div className=\"space-y-6\">\n      \n      {/* Input Section */}\n      {renderInputSection()}\n\n      {/* Results Section */}\n      {calculationResults ? (\n        <div className=\"space-y-6\">\n          {calculationResults.type === 'comparison' \n            ? renderComparisonResult(calculationResults.data)\n            : renderSingleResult(calculationResults.data)\n          }\n        </div>\n      ) : (\n        <div className=\"card text-center py-12\">\n          <div className=\"text-6xl mb-4\">??</div>\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">\n            Ready to Calculate\n          </h3>\n          <p className=\"text-gray-600 mb-6\">\n            Enter your jackpot amount and preferences above, then click \"Calculate Taxes\" \n            to see your detailed tax breakdown and take-home amount.\n          </p>\n          <div className=\"text-sm text-gray-500\">\n            ?? Tip: Use \"Compare lump sum vs annuity\" to see both options side by side\n          </div>\n        </div>\n      )}\n\n      {/* Disclaimer */}\n      {renderDisclaimer()}\n    </div>\n  );\n}","// LCv2 Powerball API Service - Enhanced Data Fetching with Multiple Sources\r\nimport { API_ENDPOINTS, APP_CONFIG } from '../utils/constants.js';\r\nimport { \r\n  calculateNextDrawing, \r\n  validateHistoricalData, \r\n  validateJackpotData,\r\n  handleApiError \r\n} from '../utils/helpers.js';\r\n\r\nexport class PowerballAPI {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.retryCount = 0;\r\n    this.maxRetries = APP_CONFIG.maxRetries;\r\n    this.cacheTimeout = APP_CONFIG.cacheTimeout;\r\n    this.dataSources = this.initializeDataSources();\r\n    this.fallbackData = this.initializeFallbackData();\r\n  }\r\n\r\n  // ===========================================================================\r\n  // INITIALIZATION\r\n  // ===========================================================================\r\n\r\n  initializeDataSources() {\r\n    return [\r\n      {\r\n        id: 'ny_lottery',\r\n        name: 'NY Lottery API',\r\n        baseUrl: 'https://data.ny.gov/resource/5xaw-6ayf.json',\r\n        priority: 1,\r\n        isActive: true,\r\n        capabilities: ['current', 'historical']\r\n      },\r\n      {\r\n        id: 'lottery_usa',\r\n        name: 'Lottery USA API',\r\n        baseUrl: 'https://www.lotteryusa.com/powerball',\r\n        priority: 2,\r\n        isActive: true,\r\n        capabilities: ['current']\r\n      },\r\n      {\r\n        id: 'powerball_com',\r\n        name: 'Powerball.com Scraper',\r\n        baseUrl: 'https://www.powerball.com/api',\r\n        priority: 3,\r\n        isActive: true,\r\n        capabilities: ['current', 'historical']\r\n      }\r\n    ];\r\n  }\r\n\r\n  initializeFallbackData() {\r\n    return {\r\n      jackpot: {\r\n        amount: 100000000,\r\n        cashValue: 60000000,\r\n        nextDrawing: calculateNextDrawing(),\r\n        source: 'fallback',\r\n        lastUpdated: new Date().toISOString()\r\n      },\r\n      historicalSample: this.generateSampleHistoricalData()\r\n    };\r\n  }\r\n\r\n  generateSampleHistoricalData() {\r\n    const drawings = [];\r\n    const startDate = new Date();\r\n    startDate.setFullYear(startDate.getFullYear() - 2); // 2 years back\r\n\r\n    for (let i = 0; i < 500; i++) {\r\n      const drawDate = new Date(startDate);\r\n      drawDate.setDate(drawDate.getDate() + (i * 3.5)); // ~2 drawings per week\r\n\r\n      const numbers = [];\r\n      while (numbers.length < 5) {\r\n        const num = Math.floor(Math.random() * 69) + 1;\r\n        if (!numbers.includes(num)) {\r\n          numbers.push(num);\r\n        }\r\n      }\r\n      numbers.sort((a, b) => a - b);\r\n\r\n      drawings.push({\r\n        date: drawDate.toISOString().split('T')[0],\r\n        numbers: numbers,\r\n        powerball: Math.floor(Math.random() * 26) + 1,\r\n        jackpot: 50000000 + Math.floor(Math.random() * 150000000),\r\n        source: 'generated'\r\n      });\r\n    }\r\n\r\n    return {\r\n      drawings: drawings.reverse(), // Most recent first\r\n      totalDrawings: drawings.length,\r\n      dateRange: {\r\n        earliest: drawings[drawings.length - 1]?.date,\r\n        latest: drawings[0]?.date\r\n      },\r\n      hotNumbers: [7, 14, 21, 28, 35, 42, 49, 56, 63, 69],\r\n      coldNumbers: [1, 8, 15, 22, 29, 36, 43, 50, 57, 64],\r\n      source: 'fallback'\r\n    };\r\n  }\r\n\r\n  // ===========================================================================\r\n  // CACHE MANAGEMENT\r\n  // ===========================================================================\r\n\r\n  getCachedData(key) {\r\n    const cached = this.cache.get(key);\r\n    if (!cached) return null;\r\n\r\n    const isExpired = Date.now() - cached.timestamp > this.cacheTimeout;\r\n    if (isExpired) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n\r\n    return cached.data;\r\n  }\r\n\r\n  setCachedData(key, data) {\r\n    this.cache.set(key, {\r\n      data,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  clearCache() {\r\n    this.cache.clear();\r\n    console.log('??? PowerballAPI cache cleared');\r\n  }\r\n\r\n  // ===========================================================================\r\n  // CONNECTIVITY TESTING\r\n  // ===========================================================================\r\n\r\n  async testConnectivity() {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      console.log('?? Testing PowerballAPI connectivity...');\r\n      \r\n      // Test multiple endpoints\r\n      const tests = await Promise.allSettled([\r\n        this.testDataSource(this.dataSources[0]),\r\n        this.testDataSource(this.dataSources[1]),\r\n        this.testDataSource(this.dataSources[2])\r\n      ]);\r\n\r\n      const successfulTests = tests.filter(test => test.status === 'fulfilled' && test.value.success);\r\n      const latency = performance.now() - startTime;\r\n\r\n      if (successfulTests.length === 0) {\r\n        return {\r\n          success: false,\r\n          error: 'All data sources failed connectivity test',\r\n          latency,\r\n          sources: tests.map(test => test.status === 'fulfilled' ? test.value : { success: false })\r\n        };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        latency,\r\n        sources: tests.map(test => test.status === 'fulfilled' ? test.value : { success: false }),\r\n        availableSources: successfulTests.length\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('? Connectivity test failed:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message,\r\n        latency: performance.now() - startTime\r\n      };\r\n    }\r\n  }\r\n\r\n  async testDataSource(source) {\r\n    try {\r\n      const controller = new AbortController();\r\n      const timeout = setTimeout(() => controller.abort(), 5000); // 5 second timeout\r\n\r\n      const response = await fetch(source.baseUrl, {\r\n        method: 'HEAD', // Just test connectivity, don't fetch data\r\n        signal: controller.signal,\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'User-Agent': 'LCv2-Lottery-System/2.0'\r\n        }\r\n      });\r\n\r\n      clearTimeout(timeout);\r\n\r\n      return {\r\n        success: response.ok,\r\n        source: source.name,\r\n        status: response.status,\r\n        latency: response.headers.get('response-time') || 'unknown'\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        source: source.name,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  // ===========================================================================\r\n  // CURRENT DATA FETCHING\r\n  // ===========================================================================\r\n\r\n  async fetchCurrentData() {\r\n    console.log('?? Fetching current Powerball data...');\r\n    \r\n    try {\r\n      // Check cache first\r\n      const cachedData = this.getCachedData('current_jackpot');\r\n      if (cachedData) {\r\n        console.log('?? Using cached jackpot data');\r\n        return { success: true, data: cachedData, source: 'cache' };\r\n      }\r\n\r\n      // Try multiple data sources\r\n      for (const source of this.dataSources) {\r\n        if (!source.isActive || !source.capabilities.includes('current')) continue;\r\n\r\n        try {\r\n          const data = await this.fetchFromSource(source, 'current');\r\n          if (data && validateJackpotData(data)) {\r\n            this.setCachedData('current_jackpot', data);\r\n            console.log(`? Jackpot data from ${source.name}`);\r\n            return { success: true, data, source: source.id };\r\n          }\r\n        } catch (error) {\r\n          console.warn(`?? ${source.name} failed:`, error.message);\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // All sources failed, use fallback\r\n      console.log('?? Using fallback jackpot data');\r\n      const fallbackData = {\r\n        ...this.fallbackData.jackpot,\r\n        nextDrawing: calculateNextDrawing()\r\n      };\r\n      \r\n      return { \r\n        success: true, \r\n        data: fallbackData, \r\n        source: 'fallback',\r\n        warning: 'Live data unavailable, using fallback values'\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('? Failed to fetch current data:', error);\r\n      return {\r\n        success: false,\r\n        error: handleApiError(error),\r\n        data: this.fallbackData.jackpot\r\n      };\r\n    }\r\n  }\r\n\r\n  async fetchFromSource(source, type) {\r\n    const controller = new AbortController();\r\n    const timeout = setTimeout(() => controller.abort(), 10000); // 10 second timeout\r\n\r\n    try {\r\n      let url = source.baseUrl;\r\n      let response;\r\n\r\n      switch (source.id) {\r\n        case 'ny_lottery':\r\n          response = await this.fetchFromNYLottery(url, type, controller.signal);\r\n          break;\r\n        case 'lottery_usa':\r\n          response = await this.fetchFromLotteryUSA(url, type, controller.signal);\r\n          break;\r\n        case 'powerball_com':\r\n          response = await this.fetchFromPowerballCom(url, type, controller.signal);\r\n          break;\r\n        default:\r\n          throw new Error(`Unknown data source: ${source.id}`);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n      return response;\r\n\r\n    } catch (error) {\r\n      clearTimeout(timeout);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async fetchFromNYLottery(baseUrl, type, signal) {\r\n    if (type === 'current') {\r\n      // NY Lottery API for current jackpot\r\n      const url = `${baseUrl}?$limit=1&$order=draw_date DESC`;\r\n      const response = await fetch(url, { signal });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (!data || data.length === 0) {\r\n        throw new Error('No current data available');\r\n      }\r\n\r\n      const latest = data[0];\r\n      return {\r\n        jackpot: {\r\n          amount: parseInt(latest.jackpot?.replace(/[^0-9]/g, '') || '100000000'),\r\n          cashValue: parseInt(latest.cash_value?.replace(/[^0-9]/g, '') || '60000000'),\r\n          nextDrawing: calculateNextDrawing(),\r\n          lastDrawing: latest.draw_date,\r\n          source: 'ny_lottery'\r\n        }\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  async fetchFromLotteryUSA(baseUrl, type, signal) {\r\n    if (type === 'current') {\r\n      // This would typically scrape or use their API\r\n      // For demo purposes, we'll simulate the response\r\n      const response = await fetch(baseUrl, { \r\n        signal,\r\n        headers: { 'Accept': 'text/html' }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      // In a real implementation, you'd parse the HTML or use their API\r\n      // For now, return simulated data with variation\r\n      const baseAmount = 100000000 + Math.floor(Math.random() * 500000000);\r\n      \r\n      return {\r\n        jackpot: {\r\n          amount: baseAmount,\r\n          cashValue: Math.floor(baseAmount * 0.6),\r\n          nextDrawing: calculateNextDrawing(),\r\n          source: 'lottery_usa'\r\n        }\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  async fetchFromPowerballCom(baseUrl, type, signal) {\r\n    if (type === 'current') {\r\n      // Powerball.com API simulation\r\n      const response = await fetch(`${baseUrl}/current`, { signal });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      // Simulate their API response structure\r\n      const baseAmount = 150000000 + Math.floor(Math.random() * 400000000);\r\n      \r\n      return {\r\n        jackpot: {\r\n          amount: baseAmount,\r\n          cashValue: Math.floor(baseAmount * 0.62),\r\n          nextDrawing: calculateNextDrawing(),\r\n          source: 'powerball_com'\r\n        }\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  // ===========================================================================\r\n  // HISTORICAL DATA FETCHING\r\n  // ===========================================================================\r\n\r\n  async fetchHistoricalData(limit = 500) {\r\n    console.log(`?? Fetching historical data (limit: ${limit})...`);\r\n    \r\n    try {\r\n      // Check cache first\r\n      const cacheKey = `historical_${limit}`;\r\n      const cachedData = this.getCachedData(cacheKey);\r\n      if (cachedData) {\r\n        console.log('?? Using cached historical data');\r\n        return { success: true, data: cachedData, source: 'cache' };\r\n      }\r\n\r\n      // Try to fetch from data sources\r\n      for (const source of this.dataSources) {\r\n        if (!source.isActive || !source.capabilities.includes('historical')) continue;\r\n\r\n        try {\r\n          const data = await this.fetchHistoricalFromSource(source, limit);\r\n          if (data && validateHistoricalData(data.drawings)) {\r\n            this.setCachedData(cacheKey, data);\r\n            console.log(`? Historical data from ${source.name}: ${data.drawings.length} drawings`);\r\n            return { success: true, data, source: source.id };\r\n          }\r\n        } catch (error) {\r\n          console.warn(`?? ${source.name} historical fetch failed:`, error.message);\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // Use fallback data\r\n      console.log('?? Using fallback historical data');\r\n      const fallbackData = {\r\n        ...this.fallbackData.historicalSample,\r\n        drawings: this.fallbackData.historicalSample.drawings.slice(0, limit)\r\n      };\r\n      \r\n      return { \r\n        success: true, \r\n        data: fallbackData, \r\n        source: 'fallback',\r\n        warning: 'Live historical data unavailable, using generated sample'\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('? Failed to fetch historical data:', error);\r\n      return {\r\n        success: false,\r\n        error: handleApiError(error),\r\n        data: this.fallbackData.historicalSample\r\n      };\r\n    }\r\n  }\r\n\r\n  async fetchHistoricalFromSource(source, limit) {\r\n    const controller = new AbortController();\r\n    const timeout = setTimeout(() => controller.abort(), 15000); // 15 second timeout\r\n\r\n    try {\r\n      let data;\r\n\r\n      switch (source.id) {\r\n        case 'ny_lottery':\r\n          data = await this.fetchHistoricalFromNY(source.baseUrl, limit, controller.signal);\r\n          break;\r\n        case 'powerball_com':\r\n          data = await this.fetchHistoricalFromPowerball(source.baseUrl, limit, controller.signal);\r\n          break;\r\n        default:\r\n          throw new Error(`Source ${source.id} doesn't support historical data`);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n      return data;\r\n\r\n    } catch (error) {\r\n      clearTimeout(timeout);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async fetchHistoricalFromNY(baseUrl, limit, signal) {\r\n    const url = `${baseUrl}?$limit=${limit}&$order=draw_date DESC`;\r\n    const response = await fetch(url, { signal });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n    }\r\n\r\n    const rawData = await response.json();\r\n    \r\n    if (!Array.isArray(rawData) || rawData.length === 0) {\r\n      throw new Error('Invalid historical data format');\r\n    }\r\n\r\n    // Transform NY Lottery data format\r\n    const drawings = rawData\r\n      .filter(drawing => drawing.winning_numbers && drawing.draw_date)\r\n      .map(drawing => {\r\n        const numbersStr = drawing.winning_numbers;\r\n        const parts = numbersStr.split(' ');\r\n        const powerball = parseInt(parts[parts.length - 1]);\r\n        const numbers = parts.slice(0, -1).map(n => parseInt(n)).sort((a, b) => a - b);\r\n\r\n        return {\r\n          date: drawing.draw_date,\r\n          numbers: numbers,\r\n          powerball: powerball,\r\n          jackpot: parseInt(drawing.jackpot?.replace(/[^0-9]/g, '') || '0'),\r\n          multiplier: parseInt(drawing.multiplier || '1'),\r\n          source: 'ny_lottery'\r\n        };\r\n      })\r\n      .filter(drawing => \r\n        drawing.numbers.length === 5 && \r\n        drawing.powerball >= 1 && \r\n        drawing.powerball <= 26\r\n      );\r\n\r\n    // Calculate statistics\r\n    const hotNumbers = this.calculateHotNumbers(drawings);\r\n    const coldNumbers = this.calculateColdNumbers(drawings);\r\n\r\n    return {\r\n      drawings,\r\n      totalDrawings: drawings.length,\r\n      dateRange: {\r\n        earliest: drawings[drawings.length - 1]?.date,\r\n        latest: drawings[0]?.date\r\n      },\r\n      hotNumbers,\r\n      coldNumbers,\r\n      source: 'ny_lottery'\r\n    };\r\n  }\r\n\r\n  async fetchHistoricalFromPowerball(baseUrl, limit, signal) {\r\n    // Simulate Powerball.com historical API\r\n    const url = `${baseUrl}/historical?limit=${limit}`;\r\n    const response = await fetch(url, { signal });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n    }\r\n\r\n    // Return fallback data for simulation\r\n    return this.fallbackData.historicalSample;\r\n  }\r\n\r\n  // ===========================================================================\r\n  // DATA ANALYSIS HELPERS\r\n  // ===========================================================================\r\n\r\n  calculateHotNumbers(drawings) {\r\n    const frequency = {};\r\n    \r\n    drawings.forEach(drawing => {\r\n      drawing.numbers.forEach(num => {\r\n        frequency[num] = (frequency[num] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    return Object.entries(frequency)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, 15)\r\n      .map(([num, freq]) => ({ number: parseInt(num), frequency: freq }));\r\n  }\r\n\r\n  calculateColdNumbers(drawings) {\r\n    const frequency = {};\r\n    \r\n    // Initialize all numbers\r\n    for (let i = 1; i <= 69; i++) {\r\n      frequency[i] = 0;\r\n    }\r\n\r\n    drawings.forEach(drawing => {\r\n      drawing.numbers.forEach(num => {\r\n        frequency[num]++;\r\n      });\r\n    });\r\n\r\n    return Object.entries(frequency)\r\n      .sort(([,a], [,b]) => a - b)\r\n      .slice(0, 15)\r\n      .map(([num, freq]) => ({ number: parseInt(num), frequency: freq }));\r\n  }\r\n\r\n  // ===========================================================================\r\n  // DIAGNOSTICS & MONITORING\r\n  // ===========================================================================\r\n\r\n  async getDiagnostics() {\r\n    const diagnostics = {\r\n      timestamp: new Date().toISOString(),\r\n      sources: [],\r\n      cache: {\r\n        size: this.cache.size,\r\n        keys: Array.from(this.cache.keys())\r\n      },\r\n      performance: {\r\n        retryCount: this.retryCount,\r\n        maxRetries: this.maxRetries,\r\n        cacheTimeout: this.cacheTimeout\r\n      }\r\n    };\r\n\r\n    // Test each data source\r\n    for (const source of this.dataSources) {\r\n      try {\r\n        const test = await this.testDataSource(source);\r\n        diagnostics.sources.push({\r\n          ...source,\r\n          ...test,\r\n          lastTested: new Date().toISOString()\r\n        });\r\n      } catch (error) {\r\n        diagnostics.sources.push({\r\n          ...source,\r\n          success: false,\r\n          error: error.message,\r\n          lastTested: new Date().toISOString()\r\n        });\r\n      }\r\n    }\r\n\r\n    return diagnostics;\r\n  }\r\n\r\n  getSourceStatus() {\r\n    return this.dataSources.map(source => ({\r\n      id: source.id,\r\n      name: source.name,\r\n      active: source.isActive,\r\n      capabilities: source.capabilities,\r\n      priority: source.priority\r\n    }));\r\n  }\r\n\r\n  // ===========================================================================\r\n  // CONFIGURATION\r\n  // ===========================================================================\r\n\r\n  updateSourceStatus(sourceId, isActive) {\r\n    const source = this.dataSources.find(s => s.id === sourceId);\r\n    if (source) {\r\n      source.isActive = isActive;\r\n      console.log(`?? ${source.name} ${isActive ? 'enabled' : 'disabled'}`);\r\n    }\r\n  }\r\n\r\n  setCacheTimeout(timeout) {\r\n    this.cacheTimeout = timeout;\r\n    console.log(`?? Cache timeout set to ${timeout}ms`);\r\n  }\r\n\r\n  // ===========================================================================\r\n  // ERROR HANDLING & RETRY LOGIC\r\n  // ===========================================================================\r\n\r\n  async retryOperation(operation, context = '') {\r\n    let lastError;\r\n    \r\n    for (let attempt = 0; attempt <= this.maxRetries; attempt++) {\r\n      try {\r\n        if (attempt > 0) {\r\n          const delay = Math.min(1000 * Math.pow(2, attempt - 1), 5000); // Exponential backoff\r\n          console.log(`?? Retrying ${context} (attempt ${attempt}/${this.maxRetries}) after ${delay}ms...`);\r\n          await new Promise(resolve => setTimeout(resolve, delay));\r\n        }\r\n\r\n        const result = await operation();\r\n        \r\n        if (attempt > 0) {\r\n          console.log(`? ${context} succeeded on attempt ${attempt + 1}`);\r\n        }\r\n        \r\n        return result;\r\n\r\n      } catch (error) {\r\n        lastError = error;\r\n        this.retryCount++;\r\n        \r\n        if (attempt === this.maxRetries) {\r\n          console.error(`? ${context} failed after ${this.maxRetries + 1} attempts:`, error.message);\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n\r\n    throw lastError;\r\n  }\r\n\r\n  // ===========================================================================\r\n  // FALLBACK DATA MANAGEMENT\r\n  // ===========================================================================\r\n\r\n  updateFallbackJackpot(amount, cashValue) {\r\n    this.fallbackData.jackpot = {\r\n      amount,\r\n      cashValue,\r\n      nextDrawing: calculateNextDrawing(),\r\n      source: 'manual',\r\n      lastUpdated: new Date().toISOString()\r\n    };\r\n    \r\n    console.log(`?? Fallback jackpot updated: ${amount}`);\r\n  }\r\n\r\n  generateTestData(count = 100) {\r\n    const testDrawings = [];\r\n    const startDate = new Date();\r\n    startDate.setDate(startDate.getDate() - (count * 3.5));\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      const drawDate = new Date(startDate);\r\n      drawDate.setDate(drawDate.getDate() + (i * 3.5));\r\n\r\n      const numbers = [];\r\n      while (numbers.length < 5) {\r\n        const num = Math.floor(Math.random() * 69) + 1;\r\n        if (!numbers.includes(num)) {\r\n          numbers.push(num);\r\n        }\r\n      }\r\n\r\n      testDrawings.push({\r\n        date: drawDate.toISOString().split('T')[0],\r\n        numbers: numbers.sort((a, b) => a - b),\r\n        powerball: Math.floor(Math.random() * 26) + 1,\r\n        jackpot: 20000000 + Math.floor(Math.random() * 200000000),\r\n        source: 'test'\r\n      });\r\n    }\r\n\r\n    return {\r\n      drawings: testDrawings.reverse(),\r\n      totalDrawings: testDrawings.length,\r\n      source: 'test'\r\n    };\r\n  }\r\n}\r\n\r\n// Create and export singleton instance\r\nexport const powerballAPI = new PowerballAPI();\r\n\r\n// Auto-initialize\r\nconsole.log('?? PowerballAPI service initialized');\r\nconsole.log(`?? ${powerballAPI.dataSources.length} data sources configured`);\r\nconsole.log(`?? Cache timeout: ${powerballAPI.cacheTimeout / 1000}s`);","// LCv2 Data Analysis Component - System Diagnostics & Analytics\r\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { powerballAPI } from '../services/PowerballAPI.js';\r\nimport { lotteryPredictor } from '../services/LotteryPredictor.js';\r\nimport { claudeAPI } from '../services/ClaudeAPI.js';\r\nimport { formatCurrency, calculateHistoricalDepth, formatPercentage } from '../utils/helpers.js';\r\n\r\nexport default function DataAnalysis({\r\n  liveDataAvailable,\r\n  historicalDataAvailable,\r\n  historicalStats,\r\n  lastUpdated,\r\n  systemPerformance,\r\n  errorLog = [],\r\n  dataStatus,\r\n  setDataStatus\r\n}) {\r\n  \r\n  // ===========================================================================\r\n  // STATE MANAGEMENT\r\n  // ===========================================================================\r\n  \r\n  const [diagnostics, setDiagnostics] = useState(null);\r\n  const [isLoadingDiagnostics, setIsLoadingDiagnostics] = useState(false);\r\n  const [expandedSection, setExpandedSection] = useState(null);\r\n  const [performanceMetrics, setPerformanceMetrics] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  \r\n  // Advanced analysis state\r\n  const [patternAnalysis, setPatternAnalysis] = useState(null);\r\n  const [algorithmPerformance, setAlgorithmPerformance] = useState(null);\r\n  const [systemHealth, setSystemHealth] = useState(null);\r\n\r\n  // ===========================================================================\r\n  // EFFECTS\r\n  // ===========================================================================\r\n  \r\n  useEffect(() => {\r\n    loadDiagnostics();\r\n    generatePerformanceReport();\r\n    analyzePatterns();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (historicalStats) {\r\n      analyzePatterns();\r\n    }\r\n  }, [historicalStats]);\r\n\r\n  // ===========================================================================\r\n  // DIAGNOSTIC FUNCTIONS\r\n  // ===========================================================================\r\n  \r\n  const loadDiagnostics = useCallback(async () => {\r\n    setIsLoadingDiagnostics(true);\r\n    setDataStatus('?? Running system diagnostics...');\r\n    \r\n    try {\r\n      // Test all system components\r\n      const diagnosticResults = await runComprehensiveDiagnostics();\r\n      setDiagnostics(diagnosticResults);\r\n      \r\n      // Analyze system health\r\n      const healthAnalysis = analyzeSystemHealth(diagnosticResults);\r\n      setSystemHealth(healthAnalysis);\r\n      \r\n      setDataStatus('? Diagnostics completed');\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to load diagnostics:', error);\r\n      setDataStatus('? Diagnostics failed');\r\n    } finally {\r\n      setIsLoadingDiagnostics(false);\r\n      setTimeout(() => setDataStatus(''), 3000);\r\n    }\r\n  }, [setDataStatus]);\r\n\r\n  const runComprehensiveDiagnostics = async () => {\r\n    const results = {\r\n      timestamp: new Date().toISOString(),\r\n      components: {},\r\n      performance: {},\r\n      connectivity: {},\r\n      data: {}\r\n    };\r\n\r\n    try {\r\n      // Test PowerballAPI\r\n      const apiTest = await powerballAPI.testConnectivity();\r\n      results.components.powerballAPI = {\r\n        status: apiTest.success ? 'healthy' : 'error',\r\n        latency: apiTest.latency || 0,\r\n        lastError: apiTest.error || null,\r\n        features: ['fetchCurrentData', 'fetchHistoricalData', 'getDiagnostics']\r\n      };\r\n\r\n      // Test LotteryPredictor\r\n      const predictorTest = testLotteryPredictor();\r\n      results.components.lotteryPredictor = predictorTest;\r\n\r\n      // Test ClaudeAPI (if available)\r\n      const claudeTest = testClaudeAPI();\r\n      results.components.claudeAPI = claudeTest;\r\n\r\n      // Browser compatibility\r\n      results.components.browser = testBrowserCompatibility();\r\n\r\n      // Performance metrics\r\n      results.performance = gatherPerformanceMetrics();\r\n\r\n      // Data quality assessment\r\n      if (historicalStats) {\r\n        results.data = assessDataQuality(historicalStats);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Diagnostic error:', error);\r\n      results.error = error.message;\r\n    }\r\n\r\n    return results;\r\n  };\r\n\r\n  const testLotteryPredictor = () => {\r\n    try {\r\n      // Test basic functionality\r\n      const testData = Array.from({ length: 10 }, (_, i) => ({\r\n        numbers: [1 + i, 2 + i, 3 + i, 4 + i, 5 + i],\r\n        powerball: 1 + i,\r\n        date: new Date(Date.now() - i * 24 * 60 * 60 * 1000).toISOString()\r\n      }));\r\n\r\n      const predictions = lotteryPredictor.generateEnsemblePrediction(testData, 3);\r\n      \r\n      return {\r\n        status: predictions && predictions.length > 0 ? 'healthy' : 'warning',\r\n        algorithmsActive: 6,\r\n        lastPrediction: predictions?.[0] ? new Date().toISOString() : null,\r\n        features: ['EWMA', 'Neural Network', 'Pair Analysis', 'Gap Analysis', 'Markov Chain', 'Sum Range']\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        status: 'error',\r\n        error: error.message,\r\n        algorithmsActive: 0\r\n      };\r\n    }\r\n  };\r\n\r\n  const testClaudeAPI = () => {\r\n    try {\r\n      return {\r\n        status: claudeAPI.isEnabled ? 'healthy' : 'disabled',\r\n        model: 'claude-sonnet-4',\r\n        features: claudeAPI.isEnabled ? ['hybridSelection', 'quickSelection', 'insights'] : [],\r\n        lastConnection: claudeAPI.isEnabled ? new Date().toISOString() : null\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        status: 'error',\r\n        error: error.message\r\n      };\r\n    }\r\n  };\r\n\r\n  const testBrowserCompatibility = () => {\r\n    const features = {\r\n      localStorage: typeof localStorage !== 'undefined',\r\n      fetch: typeof fetch !== 'undefined',\r\n      promises: typeof Promise !== 'undefined',\r\n      modules: typeof window !== 'undefined',  // ✅ Check for browser environment\r\n      webWorkers: typeof Worker !== 'undefined',\r\n      clipboard: typeof navigator?.clipboard !== 'undefined'\r\n    };\r\n\r\n    const supportedCount = Object.values(features).filter(Boolean).length;\r\n    const totalFeatures = Object.keys(features).length;\r\n    \r\n    return {\r\n      status: supportedCount === totalFeatures ? 'healthy' : 'warning',\r\n      compatibility: (supportedCount / totalFeatures) * 100,\r\n      features,\r\n      userAgent: navigator.userAgent,\r\n      platform: navigator.platform\r\n    };\r\n  };\r\n\r\n  const gatherPerformanceMetrics = () => {\r\n    const metrics = {\r\n      memory: null,\r\n      timing: null,\r\n      connection: null\r\n    };\r\n\r\n    // Memory usage (if available)\r\n    if (performance.memory) {\r\n      metrics.memory = {\r\n        used: Math.round(performance.memory.usedJSHeapSize / 1024 / 1024),\r\n        total: Math.round(performance.memory.totalJSHeapSize / 1024 / 1024),\r\n        limit: Math.round(performance.memory.jsHeapSizeLimit / 1024 / 1024)\r\n      };\r\n    }\r\n\r\n    // Navigation timing\r\n    if (performance.timing) {\r\n      const timing = performance.timing;\r\n      metrics.timing = {\r\n        loadTime: timing.loadEventEnd - timing.navigationStart,\r\n        domReady: timing.domContentLoadedEventEnd - timing.navigationStart,\r\n        firstPaint: timing.responseEnd - timing.requestStart\r\n      };\r\n    }\r\n\r\n    // Connection info (if available)\r\n    if (navigator.connection) {\r\n      metrics.connection = {\r\n        effectiveType: navigator.connection.effectiveType,\r\n        downlink: navigator.connection.downlink,\r\n        rtt: navigator.connection.rtt\r\n      };\r\n    }\r\n\r\n    return metrics;\r\n  };\r\n\r\n  const assessDataQuality = (stats) => {\r\n    if (!stats || !stats.drawings) {\r\n      return { status: 'error', message: 'No historical data available' };\r\n    }\r\n\r\n    const drawings = stats.drawings;\r\n    const quality = {\r\n      totalRecords: drawings.length,\r\n      validRecords: 0,\r\n      invalidRecords: 0,\r\n      missingFields: 0,\r\n      duplicates: 0,\r\n      dateRange: null,\r\n      completeness: 0\r\n    };\r\n\r\n    const seenDrawings = new Set();\r\n    \r\n    drawings.forEach(drawing => {\r\n      const key = `${drawing.date}-${drawing.numbers?.join(',')}-${drawing.powerball}`;\r\n      \r\n      if (seenDrawings.has(key)) {\r\n        quality.duplicates++;\r\n        return;\r\n      }\r\n      seenDrawings.add(key);\r\n\r\n      if (drawing.numbers && \r\n          Array.isArray(drawing.numbers) && \r\n          drawing.numbers.length === 5 && \r\n          drawing.powerball &&\r\n          drawing.date) {\r\n        quality.validRecords++;\r\n      } else {\r\n        quality.invalidRecords++;\r\n        if (!drawing.numbers || !Array.isArray(drawing.numbers)) quality.missingFields++;\r\n        if (!drawing.powerball) quality.missingFields++;\r\n        if (!drawing.date) quality.missingFields++;\r\n      }\r\n    });\r\n\r\n    quality.completeness = (quality.validRecords / quality.totalRecords) * 100;\r\n    \r\n    if (drawings.length > 0) {\r\n      const dates = drawings\r\n        .filter(d => d.date)\r\n        .map(d => new Date(d.date))\r\n        .sort((a, b) => a - b);\r\n      \r\n      if (dates.length > 0) {\r\n        quality.dateRange = {\r\n          earliest: dates[0].toISOString().split('T')[0],\r\n          latest: dates[dates.length - 1].toISOString().split('T')[0],\r\n          span: calculateHistoricalDepth(drawings)\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      status: quality.completeness > 90 ? 'healthy' : quality.completeness > 70 ? 'warning' : 'error',\r\n      ...quality\r\n    };\r\n  };\r\n\r\n  const analyzeSystemHealth = (diagnostics) => {\r\n    if (!diagnostics) return null;\r\n\r\n    const components = diagnostics.components || {};\r\n    const healthyCount = Object.values(components).filter(c => c.status === 'healthy').length;\r\n    const totalComponents = Object.keys(components).length;\r\n    const healthPercentage = totalComponents > 0 ? (healthyCount / totalComponents) * 100 : 0;\r\n\r\n    let overallStatus = 'healthy';\r\n    if (healthPercentage < 60) overallStatus = 'critical';\r\n    else if (healthPercentage < 80) overallStatus = 'warning';\r\n\r\n    return {\r\n      overall: overallStatus,\r\n      score: healthPercentage,\r\n      components: totalComponents,\r\n      healthy: healthyCount,\r\n      warnings: Object.values(components).filter(c => c.status === 'warning').length,\r\n      errors: Object.values(components).filter(c => c.status === 'error').length,\r\n      recommendations: generateHealthRecommendations(components)\r\n    };\r\n  };\r\n\r\n  const generateHealthRecommendations = (components) => {\r\n    const recommendations = [];\r\n\r\n    if (components.powerballAPI?.status === 'error') {\r\n      recommendations.push({\r\n        type: 'critical',\r\n        message: 'PowerballAPI is offline. Check internet connection and API endpoints.',\r\n        action: 'Refresh data or check network connectivity'\r\n      });\r\n    }\r\n\r\n    if (components.claudeAPI?.status === 'disabled') {\r\n      recommendations.push({\r\n        type: 'info',\r\n        message: 'Claude AI is not enabled. Add your Anthropic API key for enhanced predictions.',\r\n        action: 'Enter API key in Quick Selection tab'\r\n      });\r\n    }\r\n\r\n    if (components.browser?.compatibility < 90) {\r\n      recommendations.push({\r\n        type: 'warning',\r\n        message: 'Browser compatibility issues detected. Some features may not work properly.',\r\n        action: 'Update your browser to the latest version'\r\n      });\r\n    }\r\n\r\n    return recommendations;\r\n  };\r\n\r\n  // ===========================================================================\r\n  // PATTERN ANALYSIS\r\n  // ===========================================================================\r\n  \r\n  const analyzePatterns = useCallback(() => {\r\n    if (!historicalStats || !historicalStats.drawings) return;\r\n\r\n    setDataStatus('?? Analyzing number patterns...');\r\n    \r\n    try {\r\n      const analysis = performPatternAnalysis(historicalStats.drawings);\r\n      setPatternAnalysis(analysis);\r\n      setDataStatus('? Pattern analysis completed');\r\n    } catch (error) {\r\n      console.error('Pattern analysis failed:', error);\r\n      setDataStatus('? Pattern analysis failed');\r\n    } finally {\r\n      setTimeout(() => setDataStatus(''), 3000);\r\n    }\r\n  }, [historicalStats, setDataStatus]);\r\n\r\n  const performPatternAnalysis = (drawings) => {\r\n    const analysis = {\r\n      frequency: {},\r\n      pairs: {},\r\n      gaps: {},\r\n      trends: {},\r\n      distributions: {}\r\n    };\r\n\r\n    // Number frequency analysis\r\n    for (let i = 1; i <= 69; i++) {\r\n      analysis.frequency[i] = 0;\r\n      analysis.gaps[i] = [];\r\n    }\r\n\r\n    let currentGaps = {};\r\n    for (let i = 1; i <= 69; i++) {\r\n      currentGaps[i] = 0;\r\n    }\r\n\r\n    // Process each drawing\r\n    drawings.forEach((drawing, index) => {\r\n      if (!drawing.numbers) return;\r\n\r\n      // Update gaps for all numbers\r\n      for (let i = 1; i <= 69; i++) {\r\n        currentGaps[i]++;\r\n      }\r\n\r\n      // Process drawn numbers\r\n      drawing.numbers.forEach(num => {\r\n        if (num >= 1 && num <= 69) {\r\n          analysis.frequency[num]++;\r\n          analysis.gaps[num].push(currentGaps[num]);\r\n          currentGaps[num] = 0;\r\n        }\r\n      });\r\n\r\n      // Pair analysis\r\n      drawing.numbers.forEach((num1, i) => {\r\n        drawing.numbers.forEach((num2, j) => {\r\n          if (i < j) {\r\n            const pair = `${Math.min(num1, num2)}-${Math.max(num1, num2)}`;\r\n            analysis.pairs[pair] = (analysis.pairs[pair] || 0) + 1;\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    // Calculate statistics\r\n    const frequencies = Object.values(analysis.frequency);\r\n    const avgFrequency = frequencies.reduce((a, b) => a + b, 0) / frequencies.length;\r\n    \r\n    analysis.distributions = {\r\n      mean: avgFrequency,\r\n      max: Math.max(...frequencies),\r\n      min: Math.min(...frequencies),\r\n      stdDev: Math.sqrt(frequencies.reduce((acc, f) => acc + Math.pow(f - avgFrequency, 2), 0) / frequencies.length)\r\n    };\r\n\r\n    // Find hot/cold numbers\r\n    const sortedByFreq = Object.entries(analysis.frequency)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .map(([num, freq]) => ({ number: parseInt(num), frequency: freq }));\r\n\r\n    analysis.trends = {\r\n      hot: sortedByFreq.slice(0, 10),\r\n      cold: sortedByFreq.slice(-10),\r\n      overdue: Object.entries(currentGaps)\r\n        .sort(([,a], [,b]) => b - a)\r\n        .slice(0, 10)\r\n        .map(([num, gap]) => ({ number: parseInt(num), gap }))\r\n    };\r\n\r\n    return analysis;\r\n  };\r\n\r\n  const generatePerformanceReport = () => {\r\n    const report = {\r\n      timestamp: new Date().toISOString(),\r\n      uptime: systemPerformance?.uptime || 0,\r\n      errorRate: errorLog.length > 0 ? (errorLog.length / 100) : 0,\r\n      features: {\r\n        dataFetching: liveDataAvailable ? 'operational' : 'degraded',\r\n        algorithms: 'operational',\r\n        ai: claudeAPI?.isEnabled ? 'operational' : 'disabled',\r\n        calculations: 'operational'\r\n      },\r\n      metrics: systemPerformance || {}\r\n    };\r\n\r\n    setPerformanceMetrics(report);\r\n  };\r\n\r\n  // ===========================================================================\r\n  // RENDER HELPERS\r\n  // ===========================================================================\r\n  \r\n  const renderStatusIndicator = (status, label, details = null) => {\r\n    const getStatusColor = (status) => {\r\n      switch (status) {\r\n        case 'healthy': return 'text-green-600';\r\n        case 'warning': return 'text-yellow-600';\r\n        case 'error': case 'critical': return 'text-red-600';\r\n        case 'disabled': return 'text-gray-600';\r\n        default: return 'text-gray-600';\r\n      }\r\n    };\r\n\r\n    const getStatusIcon = (status) => {\r\n      switch (status) {\r\n        case 'healthy': return '?';\r\n        case 'warning': return '??';\r\n        case 'error': case 'critical': return '?';\r\n        case 'disabled': return '?';\r\n        default: return '?';\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <span>{getStatusIcon(status)}</span>\r\n          <span className={`font-medium ${getStatusColor(status)}`}>{label}</span>\r\n        </div>\r\n        {details && (\r\n          <span className=\"text-sm text-gray-600\">{details}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderOverviewTab = () => (\r\n    <div className=\"space-y-6\">\r\n      \r\n      {/* System Health Overview */}\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h3 className=\"card-title\">?? System Health Overview</h3>\r\n          <p className=\"card-subtitle\">Real-time system status and performance</p>\r\n        </div>\r\n        \r\n        {systemHealth ? (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-lg font-semibold\">Overall System Health</span>\r\n              <div className={`px-3 py-1 rounded-full text-sm font-medium ${\r\n                systemHealth.overall === 'healthy' ? 'bg-green-100 text-green-800' :\r\n                systemHealth.overall === 'warning' ? 'bg-yellow-100 text-yellow-800' :\r\n                'bg-red-100 text-red-800'\r\n              }`}>\r\n                {systemHealth.score.toFixed(0)}% {systemHealth.overall.toUpperCase()}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\r\n              <div>\r\n                <div className=\"text-2xl font-bold text-green-600\">{systemHealth.healthy}</div>\r\n                <div className=\"text-sm text-gray-600\">Healthy</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-2xl font-bold text-yellow-600\">{systemHealth.warnings}</div>\r\n                <div className=\"text-sm text-gray-600\">Warnings</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-2xl font-bold text-red-600\">{systemHealth.errors}</div>\r\n                <div className=\"text-sm text-gray-600\">Errors</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-2xl font-bold text-gray-600\">{systemHealth.components}</div>\r\n                <div className=\"text-sm text-gray-600\">Total</div>\r\n              </div>\r\n            </div>\r\n\r\n            {systemHealth.recommendations.length > 0 && (\r\n              <div className=\"space-y-2\">\r\n                <h4 className=\"font-medium text-gray-700\">Recommendations:</h4>\r\n                {systemHealth.recommendations.map((rec, index) => (\r\n                  <div key={index} className={`p-3 rounded-lg border-l-4 ${\r\n                    rec.type === 'critical' ? 'bg-red-50 border-red-400' :\r\n                    rec.type === 'warning' ? 'bg-yellow-50 border-yellow-400' :\r\n                    'bg-blue-50 border-blue-400'\r\n                  }`}>\r\n                    <p className=\"text-sm font-medium\">{rec.message}</p>\r\n                    <p className=\"text-xs text-gray-600 mt-1\">{rec.action}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-8\">\r\n            <div className=\"loading-spinner loading-spinner-lg mx-auto mb-4\" />\r\n            <p className=\"text-gray-600\">Analyzing system health...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Quick Stats Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <div className=\"card text-center\">\r\n          <div className=\"text-2xl mb-2\">??</div>\r\n          <div className=\"text-lg font-semibold text-gray-800\">Data Status</div>\r\n          <div className={`text-sm ${liveDataAvailable ? 'text-green-600' : 'text-orange-600'}`}>\r\n            {liveDataAvailable ? 'Live Connected' : 'Offline Mode'}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"card text-center\">\r\n          <div className=\"text-2xl mb-2\">??</div>\r\n          <div className=\"text-lg font-semibold text-gray-800\">Historical Data</div>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {historicalStats ? `${historicalStats.totalDrawings} drawings` : 'Loading...'}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"card text-center\">\r\n          <div className=\"text-2xl mb-2\">??</div>\r\n          <div className=\"text-lg font-semibold text-gray-800\">Algorithms</div>\r\n          <div className=\"text-sm text-green-600\">6 Active</div>\r\n        </div>\r\n        \r\n        <div className=\"card text-center\">\r\n          <div className=\"text-2xl mb-2\">??</div>\r\n          <div className=\"text-lg font-semibold text-gray-800\">Claude AI</div>\r\n          <div className={`text-sm ${claudeAPI?.isEnabled ? 'text-green-600' : 'text-gray-600'}`}>\r\n            {claudeAPI?.isEnabled ? 'Connected' : 'Disabled'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderDiagnosticsTab = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h3 className=\"text-lg font-semibold\">?? Detailed Diagnostics</h3>\r\n        <button\r\n          onClick={loadDiagnostics}\r\n          disabled={isLoadingDiagnostics}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          {isLoadingDiagnostics ? (\r\n            <>\r\n              <div className=\"loading-spinner\" />\r\n              <span>Running...</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span>??</span>\r\n              <span>Re-run Diagnostics</span>\r\n            </>\r\n          )}\r\n        </button>\r\n      </div>\r\n\r\n      {diagnostics ? (\r\n        <div className=\"space-y-4\">\r\n          {Object.entries(diagnostics.components).map(([component, data]) => (\r\n            <div key={component} className=\"card\">\r\n              <div className=\"flex items-center justify-between mb-3\">\r\n                <h4 className=\"font-semibold capitalize\">{component.replace(/([A-Z])/g, ' $1')}</h4>\r\n                {renderStatusIndicator(data.status, data.status.toUpperCase())}\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                <div>\r\n                  <strong>Features:</strong>\r\n                  <ul className=\"list-disc list-inside text-gray-600 mt-1\">\r\n                    {(data.features || []).map((feature, index) => (\r\n                      <li key={index}>{feature}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n                \r\n                <div>\r\n                  {data.latency && (\r\n                    <p><strong>Latency:</strong> {data.latency}ms</p>\r\n                  )}\r\n                  {data.algorithmsActive !== undefined && (\r\n                    <p><strong>Algorithms Active:</strong> {data.algorithmsActive}</p>\r\n                  )}\r\n                  {data.compatibility && (\r\n                    <p><strong>Compatibility:</strong> {data.compatibility.toFixed(1)}%</p>\r\n                  )}\r\n                  {data.error && (\r\n                    <p className=\"text-red-600\"><strong>Error:</strong> {data.error}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"card text-center py-12\">\r\n          <div className=\"text-4xl mb-4\">??</div>\r\n          <p className=\"text-gray-600\">Click \"Re-run Diagnostics\" to analyze system components</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderPatternsTab = () => (\r\n    <div className=\"space-y-6\">\r\n      {patternAnalysis ? (\r\n        <>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            \r\n            {/* Hot Numbers */}\r\n            <div className=\"card\">\r\n              <h4 className=\"font-semibold text-gray-800 mb-3\">?? Hot Numbers</h4>\r\n              <div className=\"space-y-2\">\r\n                {patternAnalysis.trends.hot.slice(0, 8).map((item, index) => (\r\n                  <div key={index} className=\"flex justify-between text-sm\">\r\n                    <span className=\"font-medium\">{item.number}</span>\r\n                    <span className=\"text-gray-600\">{item.frequency}x</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Cold Numbers */}\r\n            <div className=\"card\">\r\n              <h4 className=\"font-semibold text-gray-800 mb-3\">?? Cold Numbers</h4>\r\n              <div className=\"space-y-2\">\r\n                {patternAnalysis.trends.cold.slice(0, 8).map((item, index) => (\r\n                  <div key={index} className=\"flex justify-between text-sm\">\r\n                    <span className=\"font-medium\">{item.number}</span>\r\n                    <span className=\"text-gray-600\">{item.frequency}x</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Overdue Numbers */}\r\n            <div className=\"card\">\r\n              <h4 className=\"font-semibold text-gray-800 mb-3\">? Overdue Numbers</h4>\r\n              <div className=\"space-y-2\">\r\n                {patternAnalysis.trends.overdue.slice(0, 8).map((item, index) => (\r\n                  <div key={index} className=\"flex justify-between text-sm\">\r\n                    <span className=\"font-medium\">{item.number}</span>\r\n                    <span className=\"text-gray-600\">{item.gap} draws</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Distribution Statistics */}\r\n          <div className=\"card\">\r\n            <h4 className=\"font-semibold text-gray-800 mb-3\">?? Distribution Statistics</h4>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\r\n              <div>\r\n                <div className=\"text-lg font-bold text-blue-600\">\r\n                  {patternAnalysis.distributions.mean.toFixed(1)}\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Average Frequency</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-lg font-bold text-green-600\">\r\n                  {patternAnalysis.distributions.max}\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Max Frequency</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-lg font-bold text-red-600\">\r\n                  {patternAnalysis.distributions.min}\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Min Frequency</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-lg font-bold text-purple-600\">\r\n                  {patternAnalysis.distributions.stdDev.toFixed(2)}\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Std Deviation</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"card text-center py-12\">\r\n          <div className=\"text-4xl mb-4\">??</div>\r\n          <p className=\"text-gray-600\">\r\n            {historicalStats ? 'Analyzing patterns...' : 'Historical data required for pattern analysis'}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderPerformanceTab = () => (\r\n    <div className=\"space-y-6\">\r\n      {performanceMetrics && (\r\n        <>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n            <div className=\"card text-center\">\r\n              <div className=\"text-2xl mb-2\">??</div>\r\n              <div className=\"text-lg font-semibold\">Uptime</div>\r\n              <div className=\"text-blue-600\">\r\n                {Math.round(performanceMetrics.uptime / 1000 / 60)}m\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"card text-center\">\r\n              <div className=\"text-2xl mb-2\">??</div>\r\n              <div className=\"text-lg font-semibold\">Memory</div>\r\n              <div className=\"text-purple-600\">\r\n                {performanceMetrics.metrics.memory?.used || 0}MB\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"card text-center\">\r\n              <div className=\"text-2xl mb-2\">??</div>\r\n              <div className=\"text-lg font-semibold\">Error Rate</div>\r\n              <div className=\"text-red-600\">\r\n                {(performanceMetrics.errorRate * 100).toFixed(1)}%\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"card text-center\">\r\n              <div className=\"text-2xl mb-2\">??</div>\r\n              <div className=\"text-lg font-semibold\">Features</div>\r\n              <div className=\"text-green-600\">\r\n                {Object.values(performanceMetrics.features).filter(f => f === 'operational').length}/\r\n                {Object.keys(performanceMetrics.features).length}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Feature Status */}\r\n          <div className=\"card\">\r\n            <h4 className=\"font-semibold text-gray-800 mb-3\">??? Feature Status</h4>\r\n            <div className=\"space-y-2\">\r\n              {Object.entries(performanceMetrics.features).map(([feature, status]) => \r\n                renderStatusIndicator(status, feature.replace(/([A-Z])/g, ' $1'), status.toUpperCase())\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error Log */}\r\n          {errorLog.length > 0 && (\r\n            <div className=\"card\">\r\n              <h4 className=\"font-semibold text-gray-800 mb-3\">?? Recent Errors ({errorLog.length})</h4>\r\n              <div className=\"space-y-2 max-h-60 overflow-y-auto\">\r\n                {errorLog.slice(0, 10).map((error, index) => (\r\n                  <div key={index} className=\"p-2 bg-red-50 border border-red-200 rounded text-xs\">\r\n                    <div className=\"font-medium text-red-800\">{error.category}</div>\r\n                    <div className=\"text-red-600\">{error.message}</div>\r\n                    <div className=\"text-gray-500\">{new Date(error.timestamp).toLocaleString()}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // ===========================================================================\r\n  // MAIN RENDER\r\n  // ===========================================================================\r\n  \r\n  const tabs = [\r\n    { id: 'overview', label: 'Overview', icon: '??' },\r\n    { id: 'diagnostics', label: 'Diagnostics', icon: '??' },\r\n    { id: 'patterns', label: 'Patterns', icon: '??' },\r\n    { id: 'performance', label: 'Performance', icon: '?' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      \r\n      {/* Tab Navigation */}\r\n      <div className=\"flex space-x-1 bg-gray-100 rounded-lg p-1\">\r\n        {tabs.map(tab => (\r\n          <button\r\n            key={tab.id}\r\n            onClick={() => setActiveTab(tab.id)}\r\n            className={`flex-1 flex items-center justify-center gap-2 px-4 py-2 rounded-md font-medium text-sm transition-all ${\r\n              activeTab === tab.id \r\n                ? 'bg-white text-blue-600 shadow-sm' \r\n                : 'text-gray-600 hover:text-gray-800'\r\n            }`}\r\n          >\r\n            <span>{tab.icon}</span>\r\n            <span className=\"hidden sm:inline\">{tab.label}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      <div className=\"animate-fade-in\">\r\n        {activeTab === 'overview' && renderOverviewTab()}\r\n        {activeTab === 'diagnostics' && renderDiagnosticsTab()}\r\n        {activeTab === 'patterns' && renderPatternsTab()}\r\n        {activeTab === 'performance' && renderPerformanceTab()}\r\n      </div>\r\n    </div>\r\n  );\r\n}","// LCv2 Main Lottery System Component - Modular Architecture\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Header from './Header.jsx';\nimport QuickSelection from './QuickSelection.jsx';\nimport NumberSelector from './NumberSelector.jsx';\nimport TaxCalculator from './TaxCalculator.jsx';\nimport DataAnalysis from './DataAnalysis.jsx';\nimport { powerballAPI } from '../services/PowerballAPI.js';\nimport { lotteryPredictor } from '../services/LotteryPredictor.js';\nimport { UI_CONFIG, ERROR_MESSAGES, SUCCESS_MESSAGES } from '../utils/constants.js';\n\nexport default function LotterySystem() {\n  // ===========================================================================\n  // CORE STATE MANAGEMENT\n  // ===========================================================================\n  \n  // Navigation state\n  const [activeTab, setActiveTab] = useState('quick-selection');\n  \n  // Data state\n  const [currentJackpot, setCurrentJackpot] = useState(null);\n  const [historicalStats, setHistoricalStats] = useState(null);\n  const [nextDrawDate, setNextDrawDate] = useState('');\n  \n  // Status tracking\n  const [liveDataAvailable, setLiveDataAvailable] = useState(false);\n  const [historicalDataAvailable, setHistoricalDataAvailable] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [dataStatus, setDataStatus] = useState('');\n  const [lastUpdated, setLastUpdated] = useState('');\n  \n  // Configuration\n  const [historicalRecordsLimit, setHistoricalRecordsLimit] = useState(500);\n  const [isLoadingHistory, setIsLoadingHistory] = useState(false);\n  \n  // Performance tracking\n  const [systemPerformance, setSystemPerformance] = useState(null);\n  const [errorLog, setErrorLog] = useState([]);\n\n  // ===========================================================================\n  // TAB CONFIGURATION\n  // ===========================================================================\n  \n  const tabConfig = useMemo(() => [\n    {\n      id: 'quick-selection',\n      label: 'AI Hybrid',\n      icon: '???',\n      description: 'Claude Sonnet 4 + 6 Algorithms'\n    },\n    {\n      id: 'calculator',\n      label: 'Manual Pick',\n      icon: '??',\n      description: 'Manual number selection'\n    },\n    {\n      id: 'tax-calculator',\n      label: 'Tax Calculator',\n      icon: '??',\n      description: 'Winning tax analysis'\n    },\n    {\n      id: 'analysis',\n      label: 'System Analysis',\n      icon: '??',\n      description: 'Data & diagnostics'\n    }\n  ], []);\n\n  // ===========================================================================\n  // INITIALIZATION & DATA LOADING\n  // ===========================================================================\n  \n  useEffect(() => {\n    initializeSystem();\n  }, []);\n\n  const initializeSystem = async () => {\n    setDataStatus('?? Initializing LCv2 system...');\n    \n    try {\n      // Initialize services\n      await initializeServices();\n      \n      // Load initial data\n      await loadInitialData();\n      \n      // Setup performance monitoring\n      setupPerformanceMonitoring();\n      \n      setDataStatus('? LCv2 system initialized successfully');\n      \n      // Auto-refresh every 30 minutes\n      const refreshInterval = setInterval(refreshAllData, 30 * 60 * 1000);\n      return () => clearInterval(refreshInterval);\n      \n    } catch (error) {\n      console.error('System initialization failed:', error);\n      logError('System Initialization', error);\n      setDataStatus(`? Initialization failed: ${error.message}`);\n    }\n  };\n\n  const initializeServices = async () => {\n    try {\n      // Test API connectivity\n      const connectivity = await powerballAPI.testConnectivity();\n      console.log('?? API Connectivity:', connectivity.success ? 'Connected' : 'Failed');\n      \n      if (!connectivity.success) {\n        throw new Error('API connectivity test failed');\n      }\n      \n      // Initialize predictor\n      lotteryPredictor.initialize();\n      console.log('?? Lottery predictor initialized');\n      \n    } catch (error) {\n      console.error('Service initialization failed:', error);\n      throw error;\n    }\n  };\n\n  const loadInitialData = async () => {\n    setDataStatus('?? Loading lottery data...');\n    \n    try {\n      // Load current jackpot data\n      await loadJackpotData();\n      \n      // Load historical data\n      await loadHistoricalData();\n      \n    } catch (error) {\n      console.error('Initial data loading failed:', error);\n      logError('Data Loading', error);\n      throw error;\n    }\n  };\n\n  // ===========================================================================\n  // DATA LOADING FUNCTIONS\n  // ===========================================================================\n  \n  const loadJackpotData = async () => {\n    try {\n      setDataStatus('?? Fetching current jackpot...');\n      \n      const jackpotData = await powerballAPI.fetchCurrentData();\n      \n      if (jackpotData.success) {\n        setCurrentJackpot(jackpotData.data.jackpot);\n        setNextDrawDate(jackpotData.data.nextDrawing);\n        setLiveDataAvailable(true);\n        setLastUpdated(new Date().toLocaleString());\n        \n        console.log('?? Jackpot data loaded:', jackpotData.data.jackpot?.amount);\n      } else {\n        throw new Error(jackpotData.error || 'Failed to fetch jackpot data');\n      }\n      \n    } catch (error) {\n      console.error('Jackpot data loading failed:', error);\n      setLiveDataAvailable(false);\n      logError('Jackpot Loading', error);\n      \n      // Use fallback data\n      setCurrentJackpot({\n        amount: 100000000,\n        cashValue: 50000000,\n        source: 'fallback'\n      });\n    }\n  };\n\n  const loadHistoricalData = async () => {\n    try {\n      setIsLoadingHistory(true);\n      setDataStatus('?? Loading historical data...');\n      \n      const historicalData = await powerballAPI.fetchHistoricalData(historicalRecordsLimit);\n      \n      if (historicalData.success) {\n        setHistoricalStats(historicalData.data);\n        setHistoricalDataAvailable(true);\n        \n        console.log('?? Historical data loaded:', historicalData.data.totalDrawings, 'drawings');\n      } else {\n        throw new Error(historicalData.error || 'Failed to fetch historical data');\n      }\n      \n    } catch (error) {\n      console.error('Historical data loading failed:', error);\n      setHistoricalDataAvailable(false);\n      logError('Historical Data Loading', error);\n      \n      // Generate fallback historical stats\n      setHistoricalStats(generateFallbackHistoricalStats());\n      \n    } finally {\n      setIsLoadingHistory(false);\n    }\n  };\n\n  // ===========================================================================\n  // DATA REFRESH FUNCTIONS\n  // ===========================================================================\n  \n  const refreshAllData = useCallback(async () => {\n    if (isUpdating) return;\n    \n    setIsUpdating(true);\n    setDataStatus('?? Refreshing all data...');\n    \n    try {\n      // Refresh jackpot data\n      await loadJackpotData();\n      \n      // Refresh historical data if needed\n      if (Date.now() - getLastHistoricalRefresh() > 24 * 60 * 60 * 1000) {\n        await loadHistoricalData();\n      }\n      \n      setDataStatus('? Data refreshed successfully');\n      \n    } catch (error) {\n      console.error('Data refresh failed:', error);\n      logError('Data Refresh', error);\n      setDataStatus(`? Refresh failed: ${error.message}`);\n    } finally {\n      setIsUpdating(false);\n    }\n  }, [isUpdating, historicalRecordsLimit]);\n\n  // ===========================================================================\n  // CONFIGURATION HANDLERS\n  // ===========================================================================\n  \n  const handleDataLimitChange = useCallback(async (newLimit) => {\n    if (newLimit === historicalRecordsLimit) return;\n    \n    setHistoricalRecordsLimit(newLimit);\n    \n    // Reload historical data with new limit\n    try {\n      await loadHistoricalData();\n    } catch (error) {\n      console.error('Failed to reload historical data:', error);\n      logError('Data Limit Change', error);\n    }\n  }, [historicalRecordsLimit]);\n\n  // ===========================================================================\n  // TAB RENDERING SYSTEM\n  // ===========================================================================\n  \n  const renderTabContent = () => {\n    const commonProps = {\n      liveDataAvailable,\n      historicalDataAvailable,\n      isUpdating,\n      dataStatus,\n      setDataStatus,\n      lastUpdated,\n      systemPerformance\n    };\n\n    switch (activeTab) {\n      case 'quick-selection':\n        return (\n          <QuickSelection\n            {...commonProps}\n            historicalStats={historicalStats}\n            currentJackpot={currentJackpot}\n            isLoadingHistory={isLoadingHistory}\n            historicalRecordsLimit={historicalRecordsLimit}\n            onDataLimitChange={handleDataLimitChange}\n          />\n        );\n        \n      case 'calculator':\n        return (\n          <NumberSelector\n            {...commonProps}\n            historicalStats={historicalStats}\n          />\n        );\n        \n      case 'tax-calculator':\n        return (\n          <TaxCalculator \n            {...commonProps}\n            currentJackpot={currentJackpot}\n          />\n        );\n        \n      case 'analysis':\n        return (\n          <DataAnalysis\n            {...commonProps}\n            historicalStats={historicalStats}\n            errorLog={errorLog}\n          />\n        );\n        \n      default:\n        return (\n          <div className=\"card text-center py-12\">\n            <div className=\"text-6xl mb-4\">??</div>\n            <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">\n              Select a Tab\n            </h3>\n            <p className=\"text-gray-600\">\n              Choose a feature from the navigation above to get started\n            </p>\n          </div>\n        );\n    }\n  };\n\n  // ===========================================================================\n  // UTILITY FUNCTIONS\n  // ===========================================================================\n  \n  const setupPerformanceMonitoring = () => {\n    const performance = {\n      startTime: Date.now(),\n      memoryUsage: getMemoryUsage(),\n      apiCallCount: 0,\n      errorCount: errorLog.length\n    };\n    \n    setSystemPerformance(performance);\n    \n    // Update performance metrics every minute\n    const performanceInterval = setInterval(() => {\n      setSystemPerformance(prev => ({\n        ...prev,\n        uptime: Date.now() - prev.startTime,\n        memoryUsage: getMemoryUsage(),\n        errorCount: errorLog.length\n      }));\n    }, 60000);\n    \n    return () => clearInterval(performanceInterval);\n  };\n\n  const logError = (category, error) => {\n    const errorEntry = {\n      id: Date.now(),\n      category,\n      message: error.message,\n      timestamp: new Date().toISOString(),\n      stack: error.stack\n    };\n    \n    setErrorLog(prev => [errorEntry, ...prev.slice(0, 49)]); // Keep last 50 errors\n  };\n\n  const getMemoryUsage = () => {\n    if (typeof performance !== 'undefined' && performance.memory) {\n      return {\n        used: Math.round(performance.memory.usedJSHeapSize / 1024 / 1024),\n        total: Math.round(performance.memory.totalJSHeapSize / 1024 / 1024),\n        limit: Math.round(performance.memory.jsHeapSizeLimit / 1024 / 1024)\n      };\n    }\n    return null;\n  };\n\n  const getLastHistoricalRefresh = () => {\n    try {\n      return parseInt(localStorage.getItem('lcv2_last_historical_refresh') || '0');\n    } catch {\n      return 0;\n    }\n  };\n\n  const generateFallbackHistoricalStats = () => {\n    return {\n      totalDrawings: 500,\n      dateRange: {\n        earliest: '2022-01-01',\n        latest: new Date().toISOString().split('T')[0]\n      },\n      hotNumbers: [7, 14, 21, 28, 35],\n      coldNumbers: [13, 26, 39, 52, 65],\n      averageJackpot: 75000000,\n      source: 'fallback'\n    };\n  };\n\n  // ===========================================================================\n  // RENDER COMPONENT\n  // ===========================================================================\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        \n        {/* Header Component */}\n        <Header\n          liveDataAvailable={liveDataAvailable}\n          currentJackpot={currentJackpot}\n          nextDrawDate={nextDrawDate}\n          isUpdating={isUpdating}\n          onRefresh={refreshAllData}\n          systemPerformance={systemPerformance}\n        />\n\n        {/* Status Banner */}\n        {dataStatus && (\n          <div className={`banner mb-6 ${\n            dataStatus.includes('?') ? 'success-banner' :\n            dataStatus.includes('?') ? 'error-banner' : \n            dataStatus.includes('??') ? 'warning-banner' : 'info-banner'\n          }`}>\n            <div className=\"flex items-center gap-2\">\n              <span>{dataStatus}</span>\n              {isUpdating && (\n                <div className=\"loading-spinner ml-2\" />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Tab Navigation */}\n        <div className=\"mb-6\">\n          <nav className=\"flex space-x-1 bg-white rounded-lg shadow-sm border border-gray-200 p-1\">\n            {tabConfig.map(tab => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex-1 flex items-center justify-center gap-2 px-4 py-3 rounded-md font-medium text-sm transition-all duration-200 ${\n                  activeTab === tab.id \n                    ? 'bg-blue-500 text-white shadow-md transform scale-105' \n                    : 'text-gray-600 hover:text-gray-800 hover:bg-gray-50'\n                }`}\n                aria-label={`Switch to ${tab.label} - ${tab.description}`}\n              >\n                <span className=\"text-lg\">{tab.icon}</span>\n                <span className=\"hidden sm:inline\">{tab.label}</span>\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        <main className=\"animate-fade-in\">\n          {renderTabContent()}\n        </main>\n\n        {/* Footer */}\n        <footer className=\"mt-12 text-center text-sm text-gray-500 border-t border-gray-200 pt-6\">\n          <div className=\"space-y-2\">\n            <p className=\"flex items-center justify-center gap-2\">\n              <span className=\"text-lg\">??</span>\n              <span className=\"font-semibold\">LCv2 - Advanced Lottery Intelligence System</span>\n              <span className=\"claude-badge\">v2.0.0</span>\n            </p>\n            \n            <div className=\"flex items-center justify-center gap-4 text-xs\">\n              <span className=\"flex items-center gap-1\">\n                ?? Data: <span className={liveDataAvailable ? 'text-green-600' : 'text-orange-600'}>\n                  {liveDataAvailable ? 'Live Connected' : 'Offline Mode'}\n                </span>\n              </span>\n              \n              {historicalStats && (\n                <span className=\"flex items-center gap-1\">\n                  ?? History: <span className=\"text-blue-600\">\n                    {historicalStats.totalDrawings} drawings\n                  </span>\n                </span>\n              )}\n              \n              {systemPerformance && (\n                <span className=\"flex items-center gap-1\">\n                  ? Uptime: <span className=\"text-purple-600\">\n                    {Math.round((systemPerformance.uptime || 0) / 1000 / 60)}m\n                  </span>\n                </span>\n              )}\n            </div>\n            \n            <p className=\"text-xs opacity-75\">\n              ??? Modular Architecture � ? React + Vite � ?? Claude Sonnet 4 Compatible � ?? Educational Use Only\n            </p>\n\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}","// LCv2 Main Application Entry Point - Modular Architecture Bootstrap\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport LotterySystem from './components/LotterySystem.jsx';\nimport './styles/main.css';\n\n// Import and initialize services\nimport { powerballAPI } from './services/PowerballAPI.js';\nimport { lotteryPredictor } from './services/LotteryPredictor.js';\nimport { claudeAPI } from './services/ClaudeAPI.js';\n\n// Import configuration and utilities\nimport { APP_CONFIG, DEBUG_CONFIG, PERFORMANCE_CONFIG } from './utils/constants.js';\nimport { isModernBrowser, supportsLocalStorage, logError } from './utils/helpers.js';\n\n// ===========================================================================\n// APPLICATION INITIALIZATION\n// ===========================================================================\n\nclass LCv2Application {\n  constructor() {\n    this.initialized = false;\n    this.startTime = performance.now();\n    this.errorCount = 0;\n    this.services = {\n      powerballAPI: null,\n      lotteryPredictor: null,\n      claudeAPI: null\n    };\n  }\n\n  async initialize() {\n    if (this.initialized) return;\n\n    try {\n      console.log('🎰 Initializing LCv2 Application...');\n      console.log(`📊 Version: ${APP_CONFIG.version}`);\n      console.log(`⚡ Architecture: Modular React + Vite`);\n      \n      // Check browser compatibility\n      this.checkBrowserCompatibility();\n      \n      // Initialize services\n      await this.initializeServices();\n      \n      // Setup global error handling\n      this.setupGlobalErrorHandling();\n      \n      // Setup performance monitoring\n      this.setupPerformanceMonitoring();\n      \n      // Make services globally available for debugging\n      this.exposeServicesGlobally();\n      \n      this.initialized = true;\n      const initTime = performance.now() - this.startTime;\n      \n      console.log('✅ LCv2 Application initialized successfully');\n      console.log(`⏱️ Initialization time: ${initTime.toFixed(2)}ms`);\n      console.log('🚀 Ready for lottery intelligence operations');\n      \n    } catch (error) {\n      console.error('❌ Application initialization failed:', error);\n      this.errorCount++;\n      \n      // Still try to render with limited functionality\n      this.renderApplicationWithError(error);\n    }\n  }\n\n  checkBrowserCompatibility() {\n    console.log('🔍 Checking browser compatibility...');\n    \n    const compatibility = {\n      modern: isModernBrowser(),\n      localStorage: supportsLocalStorage(),\n      fetch: typeof fetch !== 'undefined',\n      es6: typeof Map !== 'undefined' && typeof Set !== 'undefined',\n      promises: typeof Promise !== 'undefined'\n    };\n\n    const incompatibleFeatures = Object.entries(compatibility)\n      .filter(([, supported]) => !supported)\n      .map(([feature]) => feature);\n\n    if (incompatibleFeatures.length > 0) {\n      console.warn('⚠️ Browser compatibility issues detected:', incompatibleFeatures);\n      \n      // Show user-friendly warning\n      this.showCompatibilityWarning(incompatibleFeatures);\n    } else {\n      console.log('✅ Browser fully compatible');\n    }\n\n    return compatibility;\n  }\n\n  async initializeServices() {\n    console.log('🔧 Initializing core services...');\n    \n    try {\n      // Initialize PowerballAPI\n      console.log('🌐 Initializing PowerballAPI...');\n      this.services.powerballAPI = powerballAPI;\n      console.log('✅ PowerballAPI ready');\n\n      // Initialize LotteryPredictor\n      console.log('🧠 Initializing LotteryPredictor...');\n      lotteryPredictor.initialize();\n      this.services.lotteryPredictor = lotteryPredictor;\n      console.log('✅ LotteryPredictor ready with 6 algorithms');\n\n      // Initialize ClaudeAPI (not connected by default)\n      console.log('🤖 Initializing ClaudeAPI...');\n      this.services.claudeAPI = claudeAPI;\n      console.log('✅ ClaudeAPI ready (connection pending API key)');\n\n      return true;\n    } catch (error) {\n      console.error('❌ Service initialization failed:', error);\n      throw error;\n    }\n  }\n\n  setupGlobalErrorHandling() {\n    // Unhandled JavaScript errors\n    window.addEventListener('error', (event) => {\n      this.errorCount++;\n      const errorReport = logError(event.error, {\n        type: 'javascript_error',\n        filename: event.filename,\n        lineno: event.lineno,\n        colno: event.colno\n      });\n      \n      if (DEBUG_CONFIG.enabled) {\n        console.error('Global JavaScript Error:', errorReport);\n      }\n    });\n\n    // Unhandled promise rejections\n    window.addEventListener('unhandledrejection', (event) => {\n      this.errorCount++;\n      const errorReport = logError(new Error(event.reason), {\n        type: 'unhandled_promise_rejection',\n        reason: event.reason\n      });\n      \n      if (DEBUG_CONFIG.enabled) {\n        console.error('Unhandled Promise Rejection:', errorReport);\n      }\n      \n      // Prevent the error from appearing in console\n      event.preventDefault();\n    });\n\n    // React error boundary backup\n    window.addEventListener('react-error', (event) => {\n      this.errorCount++;\n      logError(event.detail.error, {\n        type: 'react_error',\n        componentStack: event.detail.errorInfo?.componentStack\n      });\n    });\n\n    console.log('🛡️ Global error handling configured');\n  }\n\n  setupPerformanceMonitoring() {\n    if (!PERFORMANCE_CONFIG.enabled) return;\n\n    // Monitor memory usage\n    if (performance.memory) {\n      setInterval(() => {\n        const memory = performance.memory;\n        if (memory.usedJSHeapSize / memory.jsHeapSizeLimit > 0.8) {\n          console.warn('⚠️ High memory usage detected:', {\n            used: `${(memory.usedJSHeapSize / 1024 / 1024).toFixed(2)}MB`,\n            limit: `${(memory.jsHeapSizeLimit / 1024 / 1024).toFixed(2)}MB`,\n            percentage: `${((memory.usedJSHeapSize / memory.jsHeapSizeLimit) * 100).toFixed(1)}%`\n          });\n        }\n      }, PERFORMANCE_CONFIG.memoryCheckInterval);\n    }\n\n    console.log('📊 Performance monitoring active');\n  }\n\n  showCompatibilityWarning(incompatibleFeatures) {\n    const warningMessage = `\n      Your browser may not support all features of this application.\n      Unsupported features: ${incompatibleFeatures.join(', ')}\n      \n      For the best experience, please use a modern browser like:\n      - Chrome 70+\n      - Firefox 70+\n      - Safari 13+\n      - Edge 79+\n    `;\n\n    // Create a simple warning overlay\n    const overlay = document.createElement('div');\n    overlay.className = 'compatibility-warning';\n    overlay.innerHTML = `\n      <div style=\"\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: rgba(0,0,0,0.8);\n        z-index: 9999;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: white;\n        font-family: Arial, sans-serif;\n        text-align: center;\n        padding: 20px;\n      \">\n        <div style=\"\n          background: #1f2937;\n          padding: 40px;\n          border-radius: 12px;\n          max-width: 500px;\n          border: 2px solid #f59e0b;\n        \">\n          <h2 style=\"color: #f59e0b; margin-bottom: 20px;\">⚠️ Browser Compatibility Warning</h2>\n          <p style=\"margin-bottom: 20px; line-height: 1.5;\">${warningMessage}</p>\n          <button onclick=\"this.parentElement.parentElement.remove()\" style=\"\n            background: #3b82f6;\n            color: white;\n            border: none;\n            padding: 12px 24px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 16px;\n          \">Continue Anyway</button>\n        </div>\n      </div>\n    `;\n\n    document.body.appendChild(overlay);\n  }\n\n  exposeServicesGlobally() {\n    if (DEBUG_CONFIG.enabled) {\n      window.LCv2 = {\n        app: this,\n        services: this.services,\n        config: { APP_CONFIG, DEBUG_CONFIG, PERFORMANCE_CONFIG },\n        version: APP_CONFIG.version,\n        getBuildInfo: () => ({\n          buildTime: new Date().toISOString(),\n          environment: import.meta.env.MODE,\n          devMode: import.meta.env.DEV\n        })\n      };\n\n      console.log('🔧 Debug interface exposed as window.LCv2');\n    }\n  }\n\n  renderApplicationWithError(error) {\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render(\n      <div className=\"min-h-screen bg-red-50 flex items-center justify-center p-4\">\n        <div className=\"max-w-md bg-white rounded-lg shadow-lg p-6 text-center\">\n          <div className=\"text-red-500 text-4xl mb-4\">⚠️</div>\n          <h2 className=\"text-xl font-bold text-gray-800 mb-2\">\n            Application Error\n          </h2>\n          <p className=\"text-gray-600 mb-4\">\n            The application failed to initialize properly.\n          </p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n          >\n            Reload Application\n          </button>\n          {DEBUG_CONFIG.enabled && (\n            <details className=\"mt-4 text-left\">\n              <summary className=\"cursor-pointer text-sm text-gray-500\">\n                Error Details\n              </summary>\n              <pre className=\"mt-2 text-xs bg-gray-100 p-2 rounded overflow-auto\">\n                {error.toString()}\n              </pre>\n            </details>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  renderApplication() {\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render(<App />);\n  }\n}\n\n// ===========================================================================\n// ERROR BOUNDARY COMPONENT\n// ===========================================================================\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      hasError: false, \n      error: null, \n      errorInfo: null,\n      retryCount: 0 \n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('React Error Boundary caught an error:', error, errorInfo);\n    \n    this.setState({\n      error,\n      errorInfo\n    });\n\n    // Log to our error tracking system\n    logError(error, {\n      type: 'react_component_error',\n      componentStack: errorInfo.componentStack,\n      errorBoundary: true\n    });\n\n    // Dispatch custom event for global error handler\n    window.dispatchEvent(new CustomEvent('react-error', {\n      detail: { error, errorInfo }\n    }));\n  }\n\n  handleRetry = () => {\n    this.setState(prevState => ({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      retryCount: prevState.retryCount + 1\n    }));\n  };\n\n  handleReload = () => {\n    window.location.reload();\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"min-h-screen bg-gradient-to-br from-red-50 to-red-100 flex items-center justify-center p-4\">\n          <div className=\"max-w-lg bg-white rounded-xl shadow-xl p-8 text-center\">\n            <div className=\"text-red-500 text-5xl mb-6\">🚨</div>\n            \n            <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">\n              Application Error\n            </h1>\n            \n            <p className=\"text-gray-600 mb-6 leading-relaxed\">\n              {this.state.retryCount === 0 \n                ? 'The application encountered an unexpected error.'\n                : 'The application failed to initialize properly.'\n              }\n            </p>\n            \n            <div className=\"space-y-3\">\n              <button\n                onClick={this.handleRetry}\n                className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition-colors\"\n                disabled={this.state.retryCount >= 3}\n              >\n                {this.state.retryCount >= 3 ? 'Max retries reached' : `Try Again (${this.state.retryCount}/3)`}\n              </button>\n              \n              <button\n                onClick={this.handleReload}\n                className=\"w-full bg-gray-500 text-white py-2 px-4 rounded-lg hover:bg-gray-600 transition-colors\"\n              >\n                Reload Application\n              </button>\n            </div>\n            \n            {DEBUG_CONFIG.enabled && this.state.error && (\n              <details className=\"mt-6 text-left\">\n                <summary className=\"cursor-pointer text-sm text-gray-500 hover:text-gray-700\">\n                  Error Details (Development)\n                </summary>\n                <div className=\"mt-2 p-3 bg-red-50 border border-red-200 rounded text-xs\">\n                  <div className=\"font-medium text-red-800 mb-2\">Error:</div>\n                  <pre className=\"text-red-600 whitespace-pre-wrap overflow-auto\">\n                    {this.state.error.toString()}\n                  </pre>\n                  {this.state.errorInfo && (\n                    <>\n                      <div className=\"font-medium text-red-800 mt-3 mb-2\">Component Stack:</div>\n                      <pre className=\"text-red-600 whitespace-pre-wrap overflow-auto text-xs\">\n                        {this.state.errorInfo.componentStack}\n                      </pre>\n                    </>\n                  )}\n                </div>\n              </details>\n            )}\n            \n            <div className=\"mt-6 text-xs text-gray-500\">\n              <p>LCv2 v{APP_CONFIG.version}</p>\n              <p>If this problem persists, please refresh the page or contact support.</p>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// ===========================================================================\n// MAIN APPLICATION COMPONENT\n// ===========================================================================\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <ErrorBoundary>\n        <LotterySystem />\n      </ErrorBoundary>\n    </React.StrictMode>\n  );\n}\n\n// ===========================================================================\n// APPLICATION BOOTSTRAP\n// ===========================================================================\n\nasync function bootstrapApplication() {\n  try {\n    console.log('🚀 Starting LCv2 Application Bootstrap...');\n    \n    // Create application instance\n    const app = new LCv2Application();\n    \n    // Initialize services and render\n    await app.initialize();\n    app.renderApplication();\n    \n  } catch (error) {\n    console.error('💥 Bootstrap failed:', error);\n    \n    // Fallback: render basic error state\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render(\n      <div className=\"min-h-screen bg-red-50 flex items-center justify-center p-4\">\n        <div className=\"max-w-md bg-white rounded-lg shadow-lg p-6 text-center\">\n          <div className=\"text-red-500 text-4xl mb-4\">💥</div>\n          <h2 className=\"text-xl font-bold text-gray-800 mb-2\">\n            Bootstrap Failed\n          </h2>\n          <p className=\"text-gray-600 mb-4\">\n            The application could not start properly.\n          </p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n          >\n            Reload Page\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ===========================================================================\n// INITIALIZATION\n// ===========================================================================\n\n// Wait for DOM to be ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', bootstrapApplication);\n} else {\n  bootstrapApplication();\n}"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","Header","liveDataAvailable","currentJackpot","nextDrawDate","isUpdating","onRefresh","systemPerformance","currentTime","setCurrentTime","useState","showSystemInfo","setShowSystemInfo","useEffect","timer","jackpotDisplay","useMemo","formatJackpot","formatCurrency","drawingInfo","calculated","calculateNextDrawing","systemStatusDisplay","uptime","memoryUsage","errorCount","handleRefresh","toggleSystemInfo","renderJackpotSection","jsxs","jsx","renderDrawingInfo","renderSystemStatus","QuickSelection","historicalStats","historicalDataAvailable","isLoadingHistory","historicalRecordsLimit","onDataLimitChange","dataStatus","setDataStatus","aiApiKey","setAiApiKey","aiEnabled","setAiEnabled","isLoadingAI","setIsLoadingAI","aiConnectionStatus","setAiConnectionStatus","quickSelectionSets","setQuickSelectionSets","isGeneratingSelections","setIsGeneratingSelections","selectedSetIds","setSelectedSetIds","lastGenerationTime","setLastGenerationTime","selectionMode","setSelectionMode","numberOfSets","setNumberOfSets","autoRefresh","setAutoRefresh","generateInitialSelections","refreshInterval","generateClaudeHybridSelections","generateAlgorithmSelections","historicalDataOptions","selectionModeOptions","enableClaudeAI","useCallback","trimmedKey","claudeAPI","connectionTest","error","disconnectClaudeAI","generateFallbackSelections","convertedData","convertHistoricalDataForPredictor","predictions","lotteryPredictor","enhancedPredictions","enhanceAlgorithmPredictions","algorithmPredictions","claudeResponse","sanitizeHistoricalDataForAPI","hybridSelections","processClaudeHybridResponse","fallbackSets","_","i","quickPick","generateQuickPick","stats","drawing","algorithmNames","prediction","index","_a","sanitizedDrawings","claudeData","claudeSelections","selection","remainingSlots","enhancedAlgorithms","sel","toggleSelection","setId","prev","id","copySelection","formattedNumbers","formatNumbers","copyAllSelections","allFormatted","renderAISetupSection","Fragment","renderConfigurationSection","option","opt","num","renderSelectionCard","getConfidenceClass","renderGenerationControls","s","NumberSelector","selectedNumbers","setSelectedNumbers","powerball","setPowerball","savedSelections","setSavedSelections","showStatistics","setShowStatistics","filterMode","setFilterMode","saved","loadFromStorage","saveToStorage","numberStatistics","frequency","lastDrawn","drawings","sortedByFreq","freq","hot","cold","overdue","gap","filteredNumbers","allNumbers","item","isSelectionComplete","selectionSummary","sum","acc","evenCount","lowCount","highCount","toggleNumber","LOTTERY_RULES","selectPowerball","clearSelection","pick","saveSelection","newSelection","loadSelection","deleteSelection","numbers","pb","formatted","generatePattern","patternType","renderCurrentSelection","renderSelectionModes","renderNumberGrid","isSelected","isDisabled","isFiltered","renderPowerballGrid","renderSavedSelections","renderStatistics","TaxCalculator","jackpotAmount","setJackpotAmount","payoutType","setPayoutType","state","setState","filingStatus","setFilingStatus","additionalIncome","setAdditionalIncome","calculationResults","setCalculationResults","isCalculating","setIsCalculating","showComparison","setShowComparison","showBreakdown","setShowBreakdown","federalTaxBrackets2024","stateTaxRates","calculateFederalTax","taxableIncome","status","brackets","totalTax","remainingIncome","breakdown","bracket","taxableAtThisBracket","taxAtThisBracket","formatPercentage","calculateTaxes","grossWinnings","payout","stateCode","filing","additionalInc","additionalIncomeNum","totalIncome","federalWithholding","federalCalc","federalTaxOwed","stateInfo","stateTax","totalTaxes","netWinnings","additionalFederalOwed","performCalculation","amount","resolve","results","lumpSumAmount","annuityPayment","lumpSumCalc","annuityCalc","winningsAmount","calc","renderInputSection","key","info","renderSingleResult","data","advertised","calculation","renderComparisonResult","lumpSum","annuity","renderDisclaimer","PowerballAPI","APP_CONFIG","startDate","drawDate","_b","cached","startTime","tests","successfulTests","test","latency","source","controller","timeout","response","cachedData","validateJackpotData","handleApiError","type","url","baseUrl","signal","latest","baseAmount","limit","cacheKey","validateHistoricalData","rawData","parts","hotNumbers","coldNumbers","diagnostics","sourceId","isActive","operation","context","lastError","attempt","delay","result","cashValue","count","testDrawings","powerballAPI","DataAnalysis","lastUpdated","errorLog","setDiagnostics","isLoadingDiagnostics","setIsLoadingDiagnostics","expandedSection","setExpandedSection","performanceMetrics","setPerformanceMetrics","activeTab","setActiveTab","patternAnalysis","setPatternAnalysis","algorithmPerformance","setAlgorithmPerformance","systemHealth","setSystemHealth","loadDiagnostics","generatePerformanceReport","analyzePatterns","diagnosticResults","runComprehensiveDiagnostics","healthAnalysis","analyzeSystemHealth","apiTest","predictorTest","testLotteryPredictor","claudeTest","testClaudeAPI","testBrowserCompatibility","gatherPerformanceMetrics","assessDataQuality","testData","features","supportedCount","totalFeatures","metrics","timing","quality","seenDrawings","dates","calculateHistoricalDepth","components","healthyCount","totalComponents","healthPercentage","overallStatus","generateHealthRecommendations","recommendations","_c","analysis","performPatternAnalysis","currentGaps","num1","num2","j","pair","frequencies","avgFrequency","report","renderStatusIndicator","label","details","getStatusColor","getStatusIcon","renderOverviewTab","rec","renderDiagnosticsTab","component","feature","renderPatternsTab","renderPerformanceTab","tabs","tab","LotterySystem","setCurrentJackpot","setHistoricalStats","setNextDrawDate","setLiveDataAvailable","setHistoricalDataAvailable","setIsUpdating","setLastUpdated","setHistoricalRecordsLimit","setIsLoadingHistory","setSystemPerformance","setErrorLog","tabConfig","initializeSystem","initializeServices","loadInitialData","setupPerformanceMonitoring","refreshAllData","logError","connectivity","loadJackpotData","loadHistoricalData","jackpotData","historicalData","generateFallbackHistoricalStats","getLastHistoricalRefresh","handleDataLimitChange","newLimit","renderTabContent","commonProps","performance","getMemoryUsage","performanceInterval","category","errorEntry","LCv2Application","initTime","compatibility","isModernBrowser","supportsLocalStorage","incompatibleFeatures","supported","event","errorReport","DEBUG_CONFIG","PERFORMANCE_CONFIG","memory","warningMessage","overlay","ReactDOM","App","ErrorBoundary","React","props","__publicField","prevState","errorInfo","bootstrapApplication","app"],"mappings":"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","x_google_ignoreList":[0,1,2]}