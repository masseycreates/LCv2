const f={name:"LCv2 - Advanced Lottery Intelligence System",version:"2.0.0",description:"Claude Sonnet 4 + 6 Algorithms Hybrid Architecture",author:"LCv2 Development Team",maxRetries:3,cacheTimeout:18e5,requestTimeout:1e4,maxHistoricalRecords:2e3,minHistoricalRecords:50,environment:typeof import.meta<"u"?"production":"development"},M={model:"claude-3-sonnet-20240229",fallbackModel:"claude-3-haiku-20240307",version:"2023-06-01",maxTokens:{hybrid:2e3,quick:1500,insights:800,test:100},temperature:.3,topP:.9,retryConfig:{maxRetries:3,baseDelay:1e3,maxDelay:1e4,exponentialBackoff:!0},rateLimits:{requestsPerMinute:30,requestsPerHour:1e3,tokensPerMinute:4e4}},g={mainNumbers:{min:1,max:69,count:5,sumRange:{min:75,max:325,optimal:{min:100,max:275}}},powerball:{min:1,max:26,count:1},drawings:{daysOfWeek:[1,3,6],drawingTime:{hour:22,minute:59,timezone:"America/New_York"},frequency:"bi-weekly"},validation:{allowDuplicates:!1,requireSorted:!1,enforceRange:!0}},b={ewmaAlpha:.3,performanceWindow:50,algorithms:[{id:"ewma",name:"EWMA Frequency Consensus",weight:.2,description:"Exponentially Weighted Moving Average frequency analysis with recent trend weighting",category:"frequency",complexity:"medium"},{id:"neural",name:"Neural Network Pattern Recognition",weight:.17,description:"Multi-layer neural network analyzing positional patterns and feature extraction",category:"pattern",complexity:"high"},{id:"pairs",name:"Pair Relationship Analysis",weight:.18,description:"Co-occurrence pattern analysis identifying number pair relationships and clustering",category:"relationship",complexity:"medium"},{id:"gaps",name:"Gap Pattern Optimization",weight:.16,description:"Overdue number identification using gap pattern analysis and statistical distribution",category:"temporal",complexity:"medium"},{id:"markov",name:"Markov Chain Transition",weight:.14,description:"State transition analysis predicting next numbers based on sequence patterns",category:"sequential",complexity:"high"},{id:"sum",name:"Sum Range Optimization",weight:.15,description:"Sum distribution analysis targeting optimal total ranges based on historical patterns",category:"mathematical",complexity:"low"}]},x={apiKeyRequired:"Anthropic API key is required for Claude AI features.",invalidApiKey:"Invalid API key format. Please check your Anthropic API key."},y={claudeIntegration:!0,hybridPredictions:!0,advancedInsights:!0,neuralNetworks:!0,markovChains:!0,ensembleLearning:!0,darkMode:!1,animations:!0,mobileOptimizations:!0,realTimeData:!0,historicalAnalysis:!0,patternRecognition:!0,quantumAlgorithms:!1,blockchainIntegration:!1,socialFeatures:!1},O={thresholds:{apiResponseTime:5e3,memoryUsage:100,errorRate:.05,cacheHitRate:.8},optimization:{enableCaching:!0,enableCompression:!0,enableLazyLoading:!0,enablePreloading:!1},logging:{level:f.environment==="development"?"debug":"info",enableConsoleLogging:!0,enableRemoteLogging:!1,enablePerformanceLogging:!0}},I={enabled:f.environment==="development",features:{showAlgorithmDetails:!0,showPerformanceMetrics:!0,showApiRequests:!0,showStateChanges:!1,mockApiResponses:!1},testData:{generateMockHistoricalData:!0,mockJackpotAmount:1e8,mockApiResponses:!1}};if(typeof window<"u"){console.log("?? LCv2 Configuration loaded"),console.log(`?? Version: ${f.version}`),console.log(`??? Environment: ${f.environment}`),console.log(`?? Algorithms: ${b.algorithms.length} configured`),console.log(`?? Claude Model: ${M.model}`);const s=["claudeIntegration","hybridPredictions","realTimeData"];s.filter(e=>y[e]).length!==s.length&&console.warn("?? Some essential features are disabled:",s.filter(e=>!y[e])),f.environment==="development"&&console.log("?? Development mode: Additional debugging features enabled")}const v=s=>Number.isInteger(s)&&s>=g.mainNumbers.min&&s<=g.mainNumbers.max,A=s=>Number.isInteger(s)&&s>=g.powerball.min&&s<=g.powerball.max,P=(s,r)=>{if(!Array.isArray(s)||s.length!==g.mainNumbers.count||!A(r))return!1;for(const t of s)if(!v(t))return!1;return new Set(s).size===g.mainNumbers.count},C=s=>!s||s<=0?"$0":s>=1e9?`$${(s/1e9).toFixed(1)}B`:s>=1e6?`$${Math.round(s/1e6)}M`:s>=1e3?`$${Math.round(s/1e3)}K`:`$${Math.round(s)}`,F=(s,r={})=>{const t={...{style:"currency",currency:"USD",minimumFractionDigits:0,maximumFractionDigits:0},...r};try{return new Intl.NumberFormat("en-US",t).format(s)}catch{return`$${Math.round(s).toLocaleString()}`}},D=(s,r=2)=>typeof s!="number"||isNaN(s)?"0%":`${s.toFixed(r)}%`,z=(s,r)=>{if(!s||!r)return"Invalid selection";try{return`${[...s].sort((t,a)=>t-a).join(", ")} | PB: ${r}`}catch{return"Format error"}},q=()=>{try{const s=new Date,r=new Date(s.toLocaleString("en-US",{timeZone:"America/New_York"})),e=r.getDay(),t=r.getHours(),a=r.getMinutes(),{daysOfWeek:n,drawingTime:o}=g.drawings;let i=new Date(r),l=!1;if(n.includes(e)){const c=new Date(r);c.setHours(o.hour,o.minute,0,0),r<=c&&(i=c,l=!0)}if(!l){let c=1;for(;c<=7&&!l;){const h=new Date(r);h.setDate(r.getDate()+c),h.setHours(o.hour,o.minute,0,0);const d=h.getDay();n.includes(d)&&(i=h,l=!0),c++}}const m=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][i.getDay()];return{date:i.toLocaleDateString("en-US",{weekday:"short",month:"short",day:"numeric",year:"numeric",timeZone:"America/New_York"}),time:"10:59 PM ET",dayOfWeek:m,timestamp:i.toISOString(),daysUntil:Math.ceil((i-r)/(1e3*60*60*24))}}catch(s){return console.error("Next drawing calculation failed:",s.message),{date:"Check powerball.com",time:"10:59 PM ET",dayOfWeek:"Mon/Wed/Sat",timestamp:null,daysUntil:null}}},H=s=>!Array.isArray(s)||s.length<10?!1:s.filter(t=>t.date&&t.numbers&&t.powerball&&P(t.numbers,t.powerball)).length/s.length>=.8,T=s=>{if(!s||typeof s!="object")return!1;const r=s.amount||s.jackpot,e=s.cashValue||s.cash_value;if(!r||r<2e7||r>5e9)return!1;if(e){if(e<1e7||e>3e9||e>=r)return!1;const t=e/r;if(t<.4||t>.8)return!1}return!0},W=s=>s&&typeof s=="string"&&s.startsWith("sk-ant-")&&s.length>20&&s.length<200,$=()=>{const s=[];for(;s.length<g.mainNumbers.count;){const e=Math.floor(Math.random()*g.mainNumbers.max)+1;s.includes(e)||s.push(e)}const r=Math.floor(Math.random()*g.powerball.max)+1;return{numbers:s.sort((e,t)=>e-t),powerball:r,timestamp:new Date().toISOString()}},G=s=>s>=85?"confidence-high":s>=75?"confidence-medium":"confidence-low",L=(s,r)=>{try{const e=JSON.stringify({data:r,timestamp:Date.now(),version:f.version});return localStorage.setItem(`lcv2_${s}`,e),!0}catch(e){return console.warn("Failed to save to localStorage:",e),!1}},j=(s,r=null)=>{try{const e=localStorage.getItem(`lcv2_${s}`);if(!e)return r;const t=JSON.parse(e);return Date.now()-t.timestamp>f.cacheTimeout?(localStorage.removeItem(`lcv2_${s}`),r):t.data}catch(e){return console.warn("Failed to load from localStorage:",e),r}},w=s=>{const r=[...s];for(let e=r.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[r[e],r[t]]=[r[t],r[e]]}return r},U=s=>{if(!s||s.length===0)return"No data";try{const r=s.map(n=>n.date).filter(n=>n).map(n=>new Date(n)).sort((n,o)=>n-o);if(r.length===0)return"No dates";const e=r[0],t=r[r.length-1],a=Math.floor((t-e)/(1e3*60*60*24));return a>365?`${Math.floor(a/365)} years`:a>30?`${Math.floor(a/30)} months`:`${a} days`}catch{return"Invalid data"}},_=(s,r="An error occurred")=>{if(s!=null&&s.response){const e=s.response.status,t=s.response.data;return e===429?"Rate limit exceeded. Please wait before retrying.":e===401?"Authentication failed. Please check your API key.":e===403?"Access forbidden. Please check your permissions.":e===404?"Requested resource not found.":e>=500?"Server error. Please try again later.":(t==null?void 0:t.error)||(t==null?void 0:t.message)||`HTTP ${e} error`}else return s!=null&&s.request?"Network connection error. Please check your internet connection.":s!=null&&s.message?s.message:r},S=(s,r={})=>({message:s.message||"Unknown error",stack:s.stack,timestamp:new Date().toISOString(),userAgent:navigator.userAgent,url:window.location.href,context:r,errorType:s.constructor.name}),B=(s,r={})=>{const e=S(s,r);return f.environment==="development"&&console.error("Error Report:",e),e},k=()=>{try{return!!(window.fetch&&window.Promise&&window.Map&&window.Set&&Array.prototype.includes&&Object.assign)}catch{return!1}},N=()=>{try{const s="__localStorage_test__";return localStorage.setItem(s,"test"),localStorage.removeItem(s),!0}catch{return!1}},E=()=>!!(navigator.clipboard&&navigator.clipboard.writeText);if(typeof window<"u"){const s={modern:k(),localStorage:N(),clipboard:E()};console.log("🔧 Browser compatibility:",s),s.modern||console.warn("⚠️ Some features may not work in this browser. Please update to a modern browser.")}class R{constructor(){this.algorithmPerformance=this.initializeAlgorithmPerformance(),this.ewmaAlpha=b.ewmaAlpha,this.neuralWeights=this.initializeNeuralWeights(),this.predictionHistory=[],this.performanceWindow=b.performanceWindow,this.accuracyHistory=[],this.isLearning=!0,this.initialized=!1}initialize(){this.initialized||(console.log("?? Initializing LotteryPredictor with 6 algorithms..."),this.algorithmPerformance=this.initializeAlgorithmPerformance(),this.neuralWeights=this.initializeNeuralWeights(),this.setupPerformanceMonitoring(),this.initialized=!0,console.log("? LotteryPredictor initialized successfully"),console.log(`?? Algorithms: ${Object.keys(this.algorithmPerformance).length}`),console.log(`?? Performance window: ${this.performanceWindow} predictions`))}initializeAlgorithmPerformance(){const r={};return b.algorithms.forEach(e=>{r[e.id]={name:e.name,weight:e.weight,successRate:.15,recentHits:[],totalPredictions:0,correctPredictions:0,averageConfidence:75,lastUsed:null,description:e.description}}),r}initializeNeuralWeights(){return{w1:Array(10).fill().map(()=>Array(20).fill().map(()=>(Math.random()-.5)*.1)),w2:Array(20).fill().map(()=>Array(69).fill().map(()=>(Math.random()-.5)*.1)),b1:Array(20).fill(0),b2:Array(69).fill(0)}}setupPerformanceMonitoring(){setInterval(()=>{this.updateAlgorithmMetrics()},6e4)}generateEnsemblePrediction(r,e=5){if(this.initialized||this.initialize(),!this.validateHistoricalData(r))return console.warn("?? Historical data validation failed, using fallback"),this.generateFallbackPredictions(e);console.log(`?? Generating ${e} ensemble predictions from ${r.length} drawings`);try{const t=this.runAllAlgorithms(r),a=this.createEnsemblePredictions(t,e),n=this.validateAndEnhancePredictions(a,r);return this.updatePredictionHistory(n),console.log("? Ensemble predictions generated successfully"),n}catch(t){return console.error("? Ensemble prediction failed:",t),this.generateFallbackPredictions(e)}}runAllAlgorithms(r){const e={};try{return e.ewma=this.generateEWMAFrequencyPrediction(r),this.algorithmPerformance.ewma.lastUsed=new Date,e.neural=this.generateNeuralNetworkPrediction(r),this.algorithmPerformance.neural.lastUsed=new Date,e.pairs=this.generatePairAnalysisPrediction(r),this.algorithmPerformance.pairs.lastUsed=new Date,e.gaps=this.generateGapAnalysisPrediction(r),this.algorithmPerformance.gaps.lastUsed=new Date,e.markov=this.generateMarkovChainPrediction(r),this.algorithmPerformance.markov.lastUsed=new Date,e.sum=this.generateSumRangePrediction(r),this.algorithmPerformance.sum.lastUsed=new Date,console.log(`?? ${Object.keys(e).length} algorithms executed successfully`),e}catch(t){console.error("?? Some algorithms failed:",t);const a={};for(let n=0;n<6;n++)a[`fallback_${n}`]=this.generateRandomPrediction(n);return a}}generateEWMAFrequencyPrediction(r){try{const e=this.calculateEWMAFrequencies(r),t=this.calculateEWMAPowerballFrequencies(r),a=[],n=Object.entries(e.numbers).sort(([,u],[,m])=>m-u).slice(0,15),o=w(n).slice(0,8);for(;a.length<5;){const[u,m]=o[a.length%o.length],c=parseInt(u);!a.includes(c)&&c>=1&&c<=69&&a.push(c)}const i=Object.entries(e.powerball).sort(([,u],[,m])=>m-u).slice(0,8),l=parseInt(i[Math.floor(Math.random()*i.length)][0]);return{numbers:a.sort((u,m)=>u-m),powerball:l,strategy:"EWMA Frequency Analysis",confidence:this.calculatePredictionConfidence("ewma",a,l),analysis:"Exponentially weighted moving average with recent trend emphasis",algorithmId:"ewma"}}catch(e){return console.error("EWMA algorithm failed:",e),this.generateRandomPrediction(0)}}calculateEWMAFrequencies(r){const e={},t={};for(let a=1;a<=69;a++)e[a]=0;for(let a=1;a<=26;a++)t[a]=0;return!r||r.length===0?{numbers:e,powerball:t}:(r.forEach((a,n)=>{const o=Math.pow(1-this.ewmaAlpha,r.length-n-1);a.numbers&&Array.isArray(a.numbers)&&a.numbers.forEach(i=>{i>=1&&i<=69&&(e[i]=this.ewmaAlpha*o+(1-this.ewmaAlpha)*e[i])}),a.powerball>=1&&a.powerball<=26&&(t[a.powerball]=this.ewmaAlpha*o+(1-this.ewmaAlpha)*t[a.powerball])}),{numbers:e,powerball:t})}calculateEWMAPowerballFrequencies(r){const e={};for(let t=1;t<=26;t++)e[t]=0;return r.forEach((t,a)=>{if(t.powerball>=1&&t.powerball<=26){const n=Math.pow(1-this.ewmaAlpha,r.length-a-1);e[t.powerball]+=n}}),e}generateNeuralNetworkPrediction(r){try{const e=this.extractNeuralFeatures(r),t=this.forwardPassNeural(e),a=this.neuralOutputToNumbers(t),n=this.neuralOutputToPowerball(t);return{numbers:a.sort((o,i)=>o-i),powerball:n,strategy:"Neural Network Pattern Recognition",confidence:this.calculatePredictionConfidence("neural",a,n),analysis:"Multi-layer neural network analyzing positional and temporal patterns",algorithmId:"neural"}}catch(e){return console.error("Neural network algorithm failed:",e),this.generateRandomPrediction(1)}}extractNeuralFeatures(r){const e=new Array(10).fill(0);if(r.length===0)return e;const t=r.slice(0,Math.min(10,r.length));for(let c=0;c<5;c++){let h=0,d=0;t.forEach(p=>{p.numbers&&p.numbers[c]&&(h+=p.numbers[c],d++)}),e[c]=d>0?h/d/69:.5}let a=0,n=0;if(t.forEach(c=>{c.numbers&&(a+=c.numbers.reduce((h,d)=>h+d,0),n++)}),e[5]=n>0?a/n/345:.5,t.length>=3){const c=t.slice(0,3).map(h=>h.numbers?h.numbers.reduce((d,p)=>d+p,0):0);e[6]=(c[0]-c[2])/345}let o=0,i=0;t.forEach(c=>{c.numbers&&c.numbers.forEach(h=>{h%2===0&&o++,i++})}),e[7]=i>0?o/i:.5;let l=0;i=0,t.forEach(c=>{c.numbers&&c.numbers.forEach(h=>{h>35&&l++,i++})}),e[8]=i>0?l/i:.5;const u={};r.forEach(c=>{c.numbers&&c.numbers.forEach(h=>{u[h]=(u[h]||0)+1})});const m=Object.entries(u).sort(([,c],[,h])=>h-c)[0];return e[9]=m?Math.min(1,(u[m[0]]||0)/100):0,e}forwardPassNeural(r){const{w1:e,w2:t,b1:a,b2:n}=this.neuralWeights,o=new Array(20).fill(0);for(let l=0;l<20;l++){let u=a[l];for(let m=0;m<10;m++)u+=r[m]*e[m][l];o[l]=Math.tanh(u)}const i=new Array(69).fill(0);for(let l=0;l<69;l++){let u=n[l];for(let m=0;m<20;m++)u+=o[m]*t[m][l];i[l]=1/(1+Math.exp(-u))}return i}neuralOutputToNumbers(r){const e=r.map((n,o)=>({number:o+1,probability:n})).sort((n,o)=>o.probability-n.probability),t=[];let a=0;for(;t.length<5&&a<e.length;){const n=e[a];Math.random()<n.probability+.3&&t.push(n.number),a++}for(;t.length<5;){const n=Math.floor(Math.random()*69)+1;t.includes(n)||t.push(n)}return t}neuralOutputToPowerball(r){const e=r.slice(0,5).reduce((t,a)=>t+a,0);return Math.floor(e*26)+1}generatePairAnalysisPrediction(r){try{const e=this.calculatePairFrequencies(r),t=this.selectNumbersFromPairs(e),a=this.selectPowerballFromPairs(r);return{numbers:t.sort((n,o)=>n-o),powerball:a,strategy:"Pair Relationship Analysis",confidence:this.calculatePredictionConfidence("pairs",t,a),analysis:"Co-occurrence pattern analysis identifying number pair relationships",algorithmId:"pairs"}}catch(e){return console.error("Pair analysis algorithm failed:",e),this.generateRandomPrediction(2)}}calculatePairFrequencies(r){const e={};return r.forEach(t=>{if(!(!t.numbers||t.numbers.length!==5))for(let a=0;a<5;a++)for(let n=a+1;n<5;n++){const o=t.numbers[a],i=t.numbers[n],l=`${Math.min(o,i)}-${Math.max(o,i)}`;e[l]=(e[l]||0)+1}}),e}selectNumbersFromPairs(r){const e=[],t=new Set,a=Object.entries(r).sort(([,n],[,o])=>o-n);for(const[n,o]of a){if(e.length>=5)break;const[i,l]=n.split("-").map(u=>parseInt(u));!t.has(i)&&e.length<5&&(e.push(i),t.add(i)),!t.has(l)&&e.length<5&&(e.push(l),t.add(l))}for(;e.length<5;){const n=Math.floor(Math.random()*69)+1;t.has(n)||(e.push(n),t.add(n))}return e}selectPowerballFromPairs(r){var o;const e={};r.forEach(i=>{i.powerball>=1&&i.powerball<=26&&(e[i.powerball]=(e[i.powerball]||0)+1)});const a=Object.entries(e).sort(([,i],[,l])=>l-i).slice(0,8),n=Math.floor(Math.random()*a.length);return parseInt(((o=a[n])==null?void 0:o[0])||"1")}generateGapAnalysisPrediction(r){try{const e=this.calculateNumberGaps(r),t=this.selectOverdueNumbers(e),a=this.selectOverduePowerball(r);return{numbers:t.sort((n,o)=>n-o),powerball:a,strategy:"Gap Analysis Optimization",confidence:this.calculatePredictionConfidence("gaps",t,a),analysis:"Overdue number identification using gap pattern analysis",algorithmId:"gaps"}}catch(e){return console.error("Gap analysis algorithm failed:",e),this.generateRandomPrediction(3)}}calculateNumberGaps(r){const e={},t={};for(let n=1;n<=69;n++)e[n]=[],t[n]=0;r.forEach((n,o)=>{for(let i=1;i<=69;i++)t[i]++;n.numbers&&n.numbers.forEach(i=>{i>=1&&i<=69&&(e[i].push(t[i]),t[i]=0)})});const a={};for(let n=1;n<=69;n++){const o=e[n];if(o.length>0){const i=o.reduce((l,u)=>l+u,0)/o.length;a[n]={currentGap:t[n],averageGap:i,maxGap:Math.max(...o),overdueScore:t[n]/i}}else a[n]={currentGap:t[n],averageGap:r.length/5,maxGap:t[n],overdueScore:1}}return a}selectOverdueNumbers(r){const e=Object.entries(r).sort(([,o],[,i])=>i.overdueScore-o.overdueScore).slice(0,15).map(([o,i])=>({number:parseInt(o),score:i.overdueScore,gap:i.currentGap})),t=[],a=e.slice(0,3),n=e.slice(3,10);for(w(a).slice(0,3).forEach(o=>{t.length<5&&t.push(o.number)}),w(n).forEach(o=>{t.length<5&&!t.includes(o.number)&&t.push(o.number)});t.length<5;){const o=Math.floor(Math.random()*69)+1;t.includes(o)||t.push(o)}return t}selectOverduePowerball(r){const e={};let t={};for(let o=1;o<=26;o++)e[o]=[],t[o]=0;r.forEach(o=>{for(let i=1;i<=26;i++)t[i]++;o.powerball>=1&&o.powerball<=26&&(e[o.powerball].push(t[o.powerball]),t[o.powerball]=0)});let a=0,n=1;for(let o=1;o<=26;o++)t[o]>a&&(a=t[o],n=o);return n}generateMarkovChainPrediction(r){try{const e=this.buildTransitionMatrix(r),t=this.generateMarkovSequence(e,r),a=this.generateMarkovPowerball(r);return{numbers:t.sort((n,o)=>n-o),powerball:a,strategy:"Markov Chain Transition",confidence:this.calculatePredictionConfidence("markov",t,a),analysis:"State transition analysis predicting next numbers based on sequence patterns",algorithmId:"markov"}}catch(e){return console.error("Markov chain algorithm failed:",e),this.generateRandomPrediction(4)}}buildTransitionMatrix(r){const e={};for(let t=0;t<r.length-1;t++){const a=r[t],n=r[t+1];!a.numbers||!n.numbers||a.numbers.forEach(o=>{e[o]||(e[o]={}),n.numbers.forEach(i=>{e[o][i]=(e[o][i]||0)+1})})}return Object.keys(e).forEach(t=>{const a=Object.values(e[t]).reduce((n,o)=>n+o,0);a>0&&Object.keys(e[t]).forEach(n=>{e[t][n]/=a})}),e}generateMarkovSequence(r,e){if(e.length===0)return this.generateRandomNumbers(5);const t=e[0];if(!t.numbers)return this.generateRandomNumbers(5);const a=[],n=new Set;for([...t.numbers].forEach(i=>{if(a.length>=5)return;const l=r[i]||{},u=Object.entries(l).sort(([,m],[,c])=>c-m).slice(0,5);if(u.length>0){const m=u[Math.floor(Math.random()*Math.min(3,u.length))],c=parseInt(m[0]);!n.has(c)&&a.length<5&&(a.push(c),n.add(c))}});a.length<5;){const i=Math.floor(Math.random()*69)+1;n.has(i)||(a.push(i),n.add(i))}return a}generateMarkovPowerball(r){if(r.length<2)return Math.floor(Math.random()*26)+1;const e=r.slice(0,5).map(o=>o.powerball).filter(o=>o>=1&&o<=26);if(e.length===0)return Math.floor(Math.random()*26)+1;const t=e.reduce((o,i)=>o+i,0)/e.length,a=Math.floor(Math.random()*6)-3;return Math.max(1,Math.min(26,Math.round(t+a)))}generateSumRangePrediction(r){try{const e=this.calculateSumStatistics(r),t=this.generateNumbersForTargetSum(e),a=this.generateSumBasedPowerball(e);return{numbers:t.sort((n,o)=>n-o),powerball:a,strategy:"Sum Range Optimization",confidence:this.calculatePredictionConfidence("sum",t,a),analysis:"Sum range optimization based on historical distribution patterns",algorithmId:"sum"}}catch(e){return console.error("Sum range algorithm failed:",e),this.generateRandomPrediction(5)}}calculateSumStatistics(r){const e=r.filter(o=>o.numbers&&o.numbers.length===5).map(o=>o.numbers.reduce((i,l)=>i+l,0));if(e.length===0)return{mean:175,stdDev:50,min:75,max:275,target:175};const t=e.reduce((o,i)=>o+i,0)/e.length,a=e.reduce((o,i)=>o+Math.pow(i-t,2),0)/e.length,n=Math.sqrt(a);return{mean:t,stdDev:n,min:Math.min(...e),max:Math.max(...e),target:t+(Math.random()-.5)*n}}generateNumbersForTargetSum(r){const{target:e,mean:t,stdDev:a}=r,n=[];let o=0,i=0;const l=100;for(;n.length<5&&i<l;){if(i++,n.length===4){const d=e-o;if(d>=1&&d<=69&&!n.includes(d)){n.push(d);break}else{n.length=0,o=0;continue}}const u=5-n.length,m=e-o,c=Math.round(m/u),h=Math.max(1,Math.min(69,c+Math.floor(Math.random()*20)-10));n.includes(h)||(n.push(h),o+=h)}return n.length<5?this.generateRandomNumbers(5):n}generateSumBasedPowerball(r){const e=(r.target-75)/200;return Math.max(1,Math.min(26,Math.round(e*26)))}createEnsemblePredictions(r,e){const t=[],a=Object.values(r);if(a.length===0)return this.generateFallbackPredictions(e);const n=Object.entries(this.algorithmPerformance).sort(([,o],[,i])=>i.weight-o.weight);for(let o=0;o<e;o++){const i=o%a.length,l=a[i];this.validatePrediction(l)?t.push({...l,id:o+1,ensembleWeight:n[i%n.length][1].weight}):t.push(this.generateRandomPrediction(o))}return t}validateAndEnhancePredictions(r,e){return r.map(t=>{if(!this.validatePrediction(t))return this.generateRandomPrediction(t.id||0);const a={...t,metadata:this.generatePredictionMetadata(t,e),timestamp:new Date().toISOString()};return t.algorithmId&&this.algorithmPerformance[t.algorithmId]&&this.algorithmPerformance[t.algorithmId].totalPredictions++,a})}validatePrediction(r){return r&&r.numbers&&r.powerball&&P(r.numbers,r.powerball)&&r.numbers.length===5}generatePredictionMetadata(r,e){const t=r.numbers.reduce((o,i)=>o+i,0),a=r.numbers.filter(o=>o%2===0).length,n=r.numbers.filter(o=>o<=35).length;return{sum:t,evenCount:a,oddCount:5-a,lowCount:n,highCount:5-n,range:Math.max(...r.numbers)-Math.min(...r.numbers),dataSize:e.length,generatedAt:new Date().toISOString()}}calculatePredictionConfidence(r,e,t){let a=70;const n=this.algorithmPerformance[r];n&&(a+=n.successRate*30,a=(a+n.averageConfidence)/2);const o=e.reduce((l,u)=>l+u,0);o>=100&&o<=250&&(a+=5);const i=e.filter(l=>l%2===0).length;return i>=2&&i<=3&&(a+=3),a+=(Math.random()-.5)*10,Math.min(95,Math.max(65,Math.round(a)))}generateFallbackPredictions(r){const e=[];for(let t=0;t<r;t++)e.push(this.generateRandomPrediction(t));return e}generateRandomPrediction(r){const e=this.generateRandomNumbers(5),t=Math.floor(Math.random()*26)+1;return{numbers:e.sort((a,n)=>a-n),powerball:t,strategy:"Enhanced Random",confidence:70+Math.floor(Math.random()*15),analysis:"Statistical random generation with mathematical constraints",algorithmId:"random",id:r+1}}generateRandomNumbers(r){const e=[];for(;e.length<r;){const t=Math.floor(Math.random()*69)+1;e.includes(t)||e.push(t)}return e}validateHistoricalData(r){return Array.isArray(r)&&r.length>=10&&r.every(e=>e.numbers&&Array.isArray(e.numbers)&&e.numbers.length===5&&e.powerball)}updateAlgorithmMetrics(){Object.keys(this.algorithmPerformance).forEach(r=>{const e=this.algorithmPerformance[r];if(e.recentHits.length>0){const t=e.recentHits.slice(-this.performanceWindow);e.successRate=t.reduce((a,n)=>a+n,0)/t.length}e.successRate>.2?e.weight=Math.min(.25,e.weight*1.05):e.successRate<.1&&(e.weight=Math.max(.05,e.weight*.95))})}updatePredictionHistory(r){this.predictionHistory.push({timestamp:new Date().toISOString(),predictions:r.map(e=>({numbers:e.numbers,powerball:e.powerball,algorithmId:e.algorithmId,confidence:e.confidence}))}),this.predictionHistory.length>100&&(this.predictionHistory=this.predictionHistory.slice(-50))}recordActualDrawing(r,e){if(this.predictionHistory.length===0)return;this.predictionHistory[this.predictionHistory.length-1].predictions.forEach(a=>{if(!a.algorithmId)return;const n=a.numbers.filter(u=>r.includes(u)).length,o=a.powerball===e?1:0,i=(n+o)/6,l=this.algorithmPerformance[a.algorithmId];l&&(l.recentHits.push(i),l.correctPredictions+=i,l.recentHits.length>this.performanceWindow&&(l.recentHits=l.recentHits.slice(-this.performanceWindow)))}),console.log("?? Algorithm performance updated with actual drawing results")}getPerformanceReport(){return{timestamp:new Date().toISOString(),algorithms:Object.entries(this.algorithmPerformance).map(([r,e])=>({id:r,name:e.name,successRate:e.successRate,weight:e.weight,totalPredictions:e.totalPredictions,lastUsed:e.lastUsed})),predictionHistory:this.predictionHistory.length,isLearning:this.isLearning}}}const K=new R;console.log("?? LotteryPredictor service loaded");console.log("?? 6 algorithms ready: EWMA, Neural, Pairs, Gaps, Markov, Sum Range");export{f as A,M as C,I as D,x as E,g as L,O as P,C as a,z as b,q as c,G as d,j as e,F as f,$ as g,_ as h,D as i,T as j,H as k,K as l,U as m,B as n,N as o,k as p,L as s,W as v};
//# sourceMappingURL=lottery-Dl5XWKmO.js.map
